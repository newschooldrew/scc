{"ast":null,"code":"import axios from 'axios';\nexport const fetchAllMasks = async dispatch => {\n  const res = await axios.get('/fetch-masks');\n  console.log(\"fetch masks response is: \");\n  console.log(res.data);\n  dispatch({\n    type: \"FETCH_ALL_MASKS\",\n    payload: res.data\n  });\n};\nexport const filterMasks = async (value, dispatch) => {\n  console.log(\"filter meals:\");\n  console.log(value);\n  const res = await axios.post('/filter-masks', {\n    value\n  });\n  console.log(\"fetch order from alerts\");\n  console.log(res.data);\n  dispatch({\n    type: \"FETCH_ALL_MASKS\",\n    payload: res.data\n  });\n};\nexport const removeItemFromCartDB = async id => {\n  console.log(id);\n  const res = await axios.post('/remove-item-from-cart-db', {\n    id\n  });\n  console.log(res);\n};\nexport const changeLimitReached = async (id, dispatch) => {\n  console.log(id);\n  const res = await axios.post('/change-limit-reached', {\n    id\n  });\n  const fetchedMasks = await axios.get('/fetch-masks');\n  console.log(fetchedMasks);\n  dispatch({\n    type: \"FETCH_ALL_MASKS\",\n    payload: fetchedMasks.data\n  });\n};\nexport const removeItemFromInventory = async cartTotal => {\n  console.log(\"cartTotal\");\n  console.log(typeof cartTotal);\n  console.log(cartTotal);\n  const res = await axios.post('/remove-item-from-inventory', {\n    cartTotal\n  });\n};\nexport const getPublicStripeKey = options => {\n  return window.fetch(`/public-key`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    } else {\n      return null;\n    }\n  }).then(data => {\n    if (!data || data.error) {\n      console.log(\"API error:\", {\n        data\n      });\n      throw Error(\"API Error\");\n    } else {\n      return data.publicKey;\n    }\n  });\n};\nexport const createPaymentIntent = async item => {\n  const {\n    actualName,\n    address,\n    city,\n    province,\n    postal_code,\n    price,\n    cartTotal\n  } = item; //   dispatch({type:\"CREATE_ORDER\",payload:item})\n\n  const options = {\n    actualName,\n    lastName,\n    cartTotal,\n    address,\n    city,\n    province,\n    postal_code,\n    price,\n    currency: \"USD\"\n  };\n  const res = await axios.post('/create-payment-intent', options);\n  return res.data;\n};\nexport const createOrder = async item => {\n  const res = await axios.post('/create-order', item);\n  console.log(\"new order created\");\n};","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/actions.js"],"names":["axios","fetchAllMasks","dispatch","res","get","console","log","data","type","payload","filterMasks","value","post","removeItemFromCartDB","id","changeLimitReached","fetchedMasks","removeItemFromInventory","cartTotal","getPublicStripeKey","options","window","fetch","method","headers","then","status","json","error","Error","publicKey","createPaymentIntent","item","actualName","address","city","province","postal_code","price","lastName","currency","createOrder"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const fetchAllMasks = async (dispatch) =>{\n    const res = await axios.get('/fetch-masks');\n        console.log(\"fetch masks response is: \")\n        console.log(res.data)\n        dispatch({type:\"FETCH_ALL_MASKS\",payload:res.data})\n    }\n\nexport const filterMasks = async (value,dispatch) =>{\n        console.log(\"filter meals:\")\n        console.log(value)\n        \n        const res = await axios.post('/filter-masks',{value});\n            console.log(\"fetch order from alerts\")\n            console.log(res.data)\n            dispatch({type:\"FETCH_ALL_MASKS\",payload:res.data}) \n    }\n\nexport const removeItemFromCartDB = async id => {\n    console.log(id)\n        const res = await axios.post('/remove-item-from-cart-db',{id})\n        console.log(res);\n}\n\nexport const changeLimitReached = async (id,dispatch) => {\n    console.log(id)\n        const res = await axios.post('/change-limit-reached',{id})\n        const fetchedMasks = await axios.get('/fetch-masks');\n        console.log(fetchedMasks);\n        dispatch({type:\"FETCH_ALL_MASKS\",payload:fetchedMasks.data}) \n}\n\nexport const removeItemFromInventory = async cartTotal => {\n    console.log(\"cartTotal\")\n    console.log(typeof cartTotal)\n    console.log(cartTotal)\n        const res = await axios.post('/remove-item-from-inventory',{cartTotal})\n}\n\nexport const getPublicStripeKey = options => {\n    return window\n      .fetch(`/public-key`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return null;\n        }\n      })\n      .then(data => {\n        if (!data || data.error) {\n          console.log(\"API error:\", { data });\n          throw Error(\"API Error\");\n        } else {\n          return data.publicKey;\n        }\n      });\n  };\n\n  export const createPaymentIntent = async item => {\n    const {actualName,address,city,province,postal_code,price,cartTotal} = item;\n    //   dispatch({type:\"CREATE_ORDER\",payload:item})\n    const options = {\n        actualName,\n        lastName,\n        cartTotal,\n        address,\n        city,\n        province,\n        postal_code,\n        price,\n        currency: \"USD\"\n      };\n    const res = await axios.post('/create-payment-intent',options)\n      return res.data;\n  };\n  \n  export const createOrder = async item =>{\n    const res = await axios.post('/create-order', item);\n        console.log(\"new order created\")        \n}"]},"metadata":{},"sourceType":"module"}