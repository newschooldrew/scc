{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/CustomButton/CustomButton.js\";\nimport React, { useRef, useContext } from 'react';\nimport AuthContext from '../AuthContext';\nimport { removeItemFromInventory } from '../actions';\n\nconst CustomButton = ({\n  type,\n  id,\n  title,\n  price,\n  url,\n  qty\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    allMasks,\n    cartItems\n  } = state;\n  let sessionCartItems = JSON.parse(sessionStorage.getItem('cart'));\n  let hitButton = useRef(0);\n\n  const removeItemFromCart = (id, title, price) => {\n    const item = {\n      id,\n      title,\n      price\n    };\n    dispatch({\n      type: \"REMOVE_ITEM_FROM_CART\",\n      payload: item\n    });\n    let myCachedTotal = JSON.parse(sessionStorage.getItem('cartTotal'));\n\n    if (myCachedTotal == 1) {\n      sessionStorage.removeItem('cart');\n      sessionStorage.setItem('cartTotal', 0);\n    }\n\n    hitButton.current -= 1;\n    console.log(`${id} hitButton:`);\n    console.log(hitButton);\n    let existingNum = parseInt(sessionStorage.getItem(id));\n    sessionStorage.setItem(`${id}`, existingNum - 1);\n  };\n\n  const addItemToCart = (id, title, price, url) => {\n    console.log(state);\n    const item = {\n      id,\n      title,\n      price,\n      url\n    };\n    dispatch({\n      type: \"ADD_ITEM_TO_CART\",\n      payload: item\n    });\n    let foundItem;\n    removeItemFromInventory(id, sessionCartItems);\n    let existingNum;\n\n    if (sessionStorage.getItem(id)) {\n      existingNum = parseInt(sessionStorage.getItem(id));\n      console.log(\"existingNum exists\");\n      console.log(existingNum);\n      sessionStorage.setItem(`${id}`, existingNum + 1);\n    } else {\n      console.log(\"existingNum does not exist\");\n      sessionStorage.setItem(`${id}`, 1);\n    }\n\n    hitButton.current += 1;\n    console.log(`${id} hitButton:`);\n    console.log(hitButton);\n\n    if (hitButton.current == qty) {\n      console.log(\"hitButton limit hit!!\");\n    }\n  };\n\n  let limitReached, disabled;\n\n  if (sessionStorage.getItem(id) == qty) {\n    limitReached = true;\n  }\n\n  if (sessionCartItems && sessionCartItems.length > 0) {\n    let foundId = sessionCartItems.filter(e => e.id == id);\n    qty = sessionCartItems.find((e, i) => e.title == post.title);\n\n    try {\n      disabled = qty.quantity;\n    } catch (e) {\n      console.log(\"no quantity\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, type == \"positive\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => addItemToCart(id, title, price, url),\n    disabled: limitReached,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"+\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeItemFromCart(id, title, price, url),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"-\")));\n};\n\nexport default CustomButton;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/CustomButton/CustomButton.js"],"names":["React","useRef","useContext","AuthContext","removeItemFromInventory","CustomButton","type","id","title","price","url","qty","state","dispatch","allMasks","cartItems","sessionCartItems","JSON","parse","sessionStorage","getItem","hitButton","removeItemFromCart","item","payload","myCachedTotal","removeItem","setItem","current","console","log","existingNum","parseInt","addItemToCart","foundItem","limitReached","disabled","length","foundId","filter","e","find","i","post","quantity"],"mappings":"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","sourcesContent":["import React, {useRef,useContext} from 'react'\nimport AuthContext from '../AuthContext'\nimport {removeItemFromInventory} from '../actions'\n\nconst CustomButton = ({type,id,title,price,url,qty}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {allMasks,cartItems} = state;\n\n    let sessionCartItems = JSON.parse(sessionStorage.getItem('cart'))\n\n    let hitButton = useRef(0)\n    \n    const removeItemFromCart = (id,title,price) =>{\n        const item = {id,title,price};\n        dispatch({type:\"REMOVE_ITEM_FROM_CART\",payload:item})\n        let myCachedTotal = JSON.parse(sessionStorage.getItem('cartTotal'))\n    \n        if(myCachedTotal == 1){\n            sessionStorage.removeItem('cart');\n            sessionStorage.setItem('cartTotal',0)\n        }\n        hitButton.current -= 1\n        console.log(`${id } hitButton:`)\n        console.log(hitButton)\n            let existingNum = parseInt(sessionStorage.getItem(id));\n            sessionStorage.setItem(`${id}`,existingNum - 1)\n    \n    }\n    \n    const addItemToCart = (id,title,price,url) =>{\n        console.log(state)\n        const item = {id,title,price,url};\n        dispatch({type:\"ADD_ITEM_TO_CART\",payload:item})\n        let foundItem;\n        removeItemFromInventory(id,sessionCartItems)\n    \n        let existingNum;\n          if(sessionStorage.getItem(id)){\n            existingNum = parseInt(sessionStorage.getItem(id));\n            console.log(\"existingNum exists\")\n            console.log(existingNum)\n            sessionStorage.setItem(`${id}`,existingNum + 1)\n          } else{\n            console.log(\"existingNum does not exist\")\n            sessionStorage.setItem(`${id}`,1)\n          }\n\n          hitButton.current += 1\n          console.log(`${id } hitButton:`)\n          console.log(hitButton)\n          if(hitButton.current ==  qty){\n              console.log(\"hitButton limit hit!!\")\n          }\n    }\n\n    let limitReached,\n        disabled;\n    if(sessionStorage.getItem(id) == qty){\n        limitReached = true;\n    }\n\n    if(sessionCartItems && sessionCartItems.length > 0){\n      let foundId = sessionCartItems.filter(e => e.id == id)\n\n        qty = sessionCartItems.find((e,i) => e.title == post.title)\n            try{\n            disabled = qty.quantity;\n            } catch(e){\n                console.log(\"no quantity\")\n            }\n    }\n\n    return (<>\n        {type == \"positive\" ? (\n            <>\n                <button \n                    onClick={e => addItemToCart(id,title,price,url)}\n                    disabled={limitReached}\n                >\n                    +\n                </button>\n            </>\n        ): (\n            <>\n                <button onClick={() => removeItemFromCart(id,title,price,url)}>-</button>\n            </>\n        )}\n    </>)\n}\n\nexport default CustomButton"]},"metadata":{},"sourceType":"module"}