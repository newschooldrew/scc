{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/StripeButton/StripeButton.js\";\nimport React, { useContext } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { createOrder } from '../../actions';\nimport AuthContext from '../../AuthContext';\n\nconst StripeCheckoutButton = ({\n  price,\n  history\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username\n  } = state;\n  const cartTotal = JSON.parse(sessionStorage.getItem('cart'));\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_i7bJE84QP11alRDH8lY2Twkw00Jl1wYTZb';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    }).then(res => {\n      // createOrder(username,cartTotal,price,dispatch)\n      history.push('/receipt');\n    }).catch(error => {\n      console.log('Payment Error: ', error);\n      alert('There was an issue with your payment! Please make sure you use the provided credit card.');\n    });\n  };\n\n  const handleSubmit = e => {\n    console.log(e);\n    console.log(\"clicked\");\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"Drews restaurant\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    triggerEvent: \"onClick\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withRouter(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/StripeButton/StripeButton.js"],"names":["React","useContext","StripeCheckout","axios","withRouter","createOrder","AuthContext","StripeCheckoutButton","price","history","state","dispatch","username","cartTotal","JSON","parse","sessionStorage","getItem","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","res","push","catch","error","console","log","alert","handleSubmit","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAClD,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBV,UAAU,CAACK,WAAD,CAAnC;AACA,QAAM;AAACM,IAAAA;AAAD,MAAaF,KAAnB;AACA,QAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAlB;AACA,QAAMC,cAAc,GAAGV,KAAK,GAAG,GAA/B;AACA,QAAMW,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBlB,IAAAA,KAAK,CAAC;AACJmB,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEP,cADJ;AAEJG,QAAAA,KAAK,EAAEA;AAFH;AAHF,KAAD,CAAL,CAQGK,IARH,CAQQC,GAAG,IAAI;AACX;AACAlB,MAAAA,OAAO,CAACmB,IAAR,CAAa,UAAb;AACD,KAXH,EAYGC,KAZH,CAYSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACAG,MAAAA,KAAK,CACH,0FADG,CAAL;AAGD,KAjBH;AAkBD,GAnBD;;AAqBA,QAAMC,YAAY,GAAGC,CAAC,IAAG;AACvBJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAHD;;AAKA,sBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,kBAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,gCALR;AAME,IAAA,WAAW,EAAG,kBAAiBxB,KAAM,EANvC;AAOE,IAAA,MAAM,EAAEU,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE,OATT;AAUE,IAAA,SAAS,EAAED,cAVb;AAWE,IAAA,YAAY,EAAC,SAXf;AAYE,IAAA,OAAO,EAAEe,YAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBD,CAjDD;;AAmDA,eAAe9B,UAAU,CAACG,oBAAD,CAAzB","sourcesContent":["import React, {useContext} from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport {withRouter} from 'react-router-dom'\nimport {createOrder} from '../../actions'\nimport AuthContext from '../../AuthContext'\n\nconst StripeCheckoutButton = ({ price,history }) => {\n  const {state,dispatch} = useContext(AuthContext)\n  const {username} = state;\n  const cartTotal = JSON.parse(sessionStorage.getItem('cart'))\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_i7bJE84QP11alRDH8lY2Twkw00Jl1wYTZb'\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token: token\n      }\n    })\n      .then(res => {\n        // createOrder(username,cartTotal,price,dispatch)\n        history.push('/receipt')\n      })\n      .catch(error => {\n        console.log('Payment Error: ', error);\n        alert(\n          'There was an issue with your payment! Please make sure you use the provided credit card.'\n        );\n      });\n  };\n\n  const handleSubmit = e =>{\n    console.log(e)\n    console.log(\"clicked\")\n  }\n\n  return (\n    <StripeCheckout\n      label='Pay Now'\n      name='Drews restaurant'\n      billingAddress\n      shippingAddress\n      image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n      triggerEvent=\"onClick\"\n      onClick={handleSubmit}\n    />\n  );\n};\n\nexport default withRouter(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}