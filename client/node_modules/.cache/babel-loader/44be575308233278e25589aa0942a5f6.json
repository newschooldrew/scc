{"ast":null,"code":"import { addItemToCart, removeItemFromCart } from './cart.utils';\n\nconst Reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case \"FETCH_ALL_MASKS\":\n      return { ...state,\n        allMasks: payload\n      };\n\n    case \"ADD_ITEM_TO_CART\":\n      let sessionItems = JSON.parse(sessionStorage.getItem('cart'));\n      return { ...state,\n        cartItems: addItemToCart(sessionItems || [], payload)\n      };\n\n    case \"REMOVE_ITEM_FROM_CART\":\n      let sessionItems_1 = JSON.parse(sessionStorage.getItem('cart'));\n      let cartTotal = JSON.parse(sessionStorage.getItem('cartTotal'));\n      return { ...state,\n        cartItems: removeItemFromCart(sessionItems_1 || [], payload, cartTotal)\n      };\n\n    case \"UPDATE_CART\":\n      return { ...state,\n        cartItems: addItemToCart(payload, [])\n      };\n\n    case \"CLEAR_CART\":\n      let sessionItems_2 = JSON.parse(sessionStorage.getItem('cart')) || [];\n      return { ...state,\n        cartItems: sessionItems_2.filter(cartItem => cartItem.id !== payload.id)\n      };\n\n    case \"TOGGLE_CART\":\n      return { ...state,\n        toggleCart: !state.toggleCart\n      };\n\n    case \"HIT_COUNT\":\n      return { ...state,\n        hitCount: payload\n      };\n\n    case \"EMPTY_CART\":\n      return { ...state,\n        cartItems: []\n      };\n\n    case \"CREATE_ORDER\":\n      return { ...state,\n        order: payload\n      };\n\n    case \"CREATE_CONFIRMATION\":\n      return { ...state,\n        confirmation: payload\n      };\n\n    case \"HIDE_STICKY_UNIT\":\n      return { ...state,\n        hideStickyUnit: payload\n      };\n\n    case \"FETCH_MASKS_CATEGORY\":\n      return { ...state,\n        masksCategory: payload\n      };\n  }\n};\n\nexport default Reducer;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/Reducer.js"],"names":["addItemToCart","removeItemFromCart","Reducer","state","type","payload","allMasks","sessionItems","JSON","parse","sessionStorage","getItem","cartItems","sessionItems_1","cartTotal","sessionItems_2","filter","cartItem","id","toggleCart","hitCount","order","confirmation","hideStickyUnit","masksCategory"],"mappings":"AAAA,SAAQA,aAAR,EAAsBC,kBAAtB,QAA+C,cAA/C;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAO;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAP,KAAyB;AACrC,UAAOD,IAAP;AACA,SAAK,iBAAL;AACI,aAAM,EACF,GAAGD,KADD;AAEFG,QAAAA,QAAQ,EAACD;AAFP,OAAN;;AAKJ,SAAK,kBAAL;AACI,UAAIE,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAnB;AACQ,aAAM,EACN,GAAGR,KADG;AAENS,QAAAA,SAAS,EAACZ,aAAa,CAACO,YAAY,IAAI,EAAjB,EAAoBF,OAApB;AAFjB,OAAN;;AAIZ,SAAK,uBAAL;AACQ,UAAIQ,cAAc,GAAGL,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAArB;AACA,UAAIG,SAAS,GAAGN,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,CAAhB;AACI,aAAM,EACF,GAAGR,KADD;AAEFS,QAAAA,SAAS,EAACX,kBAAkB,CAACY,cAAc,IAAI,EAAnB,EAAsBR,OAAtB,EAA8BS,SAA9B;AAF1B,OAAN;;AAIZ,SAAK,aAAL;AACQ,aAAM,EACF,GAAGX,KADD;AAEFS,QAAAA,SAAS,EAACZ,aAAa,CAACK,OAAD,EAAS,EAAT;AAFrB,OAAN;;AAKR,SAAK,YAAL;AACI,UAAIU,cAAc,GAAGP,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,KAA8C,EAAnE;AACI,aAAM,EACF,GAAGR,KADD;AAEFS,QAAAA,SAAS,EAACG,cAAc,CAACC,MAAf,CACNC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAeb,OAAO,CAACa,EAD7B;AAFR,OAAN;;AAOR,SAAK,aAAL;AACQ,aAAM,EACF,GAAGf,KADD;AAEFgB,QAAAA,UAAU,EAAC,CAAChB,KAAK,CAACgB;AAFhB,OAAN;;AAKR,SAAK,WAAL;AACQ,aAAM,EACF,GAAGhB,KADD;AAEFiB,QAAAA,QAAQ,EAACf;AAFP,OAAN;;AAIR,SAAK,YAAL;AACI,aAAM,EACE,GAAGF,KADL;AAEES,QAAAA,SAAS,EAAC;AAFZ,OAAN;;AAIJ,SAAK,cAAL;AACI,aAAM,EACE,GAAGT,KADL;AAEEkB,QAAAA,KAAK,EAAChB;AAFR,OAAN;;AAIJ,SAAK,qBAAL;AACI,aAAM,EACE,GAAGF,KADL;AAEEmB,QAAAA,YAAY,EAACjB;AAFf,OAAN;;AAIJ,SAAK,kBAAL;AACI,aAAM,EACE,GAAGF,KADL;AAEEoB,QAAAA,cAAc,EAAClB;AAFjB,OAAN;;AAIJ,SAAK,sBAAL;AACI,aAAM,EACE,GAAGF,KADL;AAEEqB,QAAAA,aAAa,EAACnB;AAFhB,OAAN;AAnEJ;AAwEH,CAzED;;AA0EA,eAAeH,OAAf","sourcesContent":["import {addItemToCart,removeItemFromCart} from './cart.utils'\n\nconst Reducer = (state,{type,payload}) =>{\n    switch(type){\n    case \"FETCH_ALL_MASKS\":\n        return{\n            ...state,\n            allMasks:payload\n        }\n\n    case \"ADD_ITEM_TO_CART\":\n        let sessionItems = JSON.parse(sessionStorage.getItem('cart'))\n                return{\n                ...state,\n                cartItems:addItemToCart(sessionItems || [],payload)\n                }\n    case \"REMOVE_ITEM_FROM_CART\":\n            let sessionItems_1 = JSON.parse(sessionStorage.getItem('cart'))\n            let cartTotal = JSON.parse(sessionStorage.getItem('cartTotal'))\n                return{\n                    ...state,\n                    cartItems:removeItemFromCart(sessionItems_1 || [],payload,cartTotal)\n                    }          \n    case \"UPDATE_CART\":\n            return{\n                ...state,\n                cartItems:addItemToCart(payload,[])\n            }\n    \n    case \"CLEAR_CART\":\n        let sessionItems_2 = JSON.parse(sessionStorage.getItem('cart')) || []\n            return{\n                ...state,\n                cartItems:sessionItems_2.filter(\n                    cartItem => cartItem.id !==payload.id\n                    )\n                }\n    \n    case \"TOGGLE_CART\":\n            return{\n                ...state,\n                toggleCart:!state.toggleCart\n                    }   \n    \n    case \"HIT_COUNT\":\n            return{\n                ...state,\n                hitCount:payload\n                    }   \n    case \"EMPTY_CART\":\n        return{\n                ...state,\n                cartItems:[]\n            }  \n    case \"CREATE_ORDER\":\n        return{\n                ...state,\n                order:payload\n            }  \n    case \"CREATE_CONFIRMATION\":\n        return{\n                ...state,\n                confirmation:payload\n            }  \n    case \"HIDE_STICKY_UNIT\":\n        return{\n                ...state,\n                hideStickyUnit:payload\n            }  \n    case \"FETCH_MASKS_CATEGORY\":\n        return{\n                ...state,\n                masksCategory:payload\n            }  \n    }\n}\nexport default Reducer;"]},"metadata":{},"sourceType":"module"}