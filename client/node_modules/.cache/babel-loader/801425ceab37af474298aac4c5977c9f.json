{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/Checkout/Checkout.js\";\n\n/*eslint-disable*/\nimport React, { useEffect, useContext, useRef, useState } from \"react\";\nimport AuthContext from '../AuthContext';\nimport { Link } from 'react-router-dom'; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\"; // @material-ui/icons\n\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport Close from \"@material-ui/icons/Close\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport Add from \"@material-ui/icons/Add\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\"; // core components\n\nimport Header from \"../Header/Header_Checkout.js\";\nimport HeaderLinks from \"../Header/HeaderLinks.js\";\nimport Parallax from \"../Parallax/Parallax.js\";\nimport Grid from '@material-ui/core/Grid';\nimport GridContainer from \"../Grid/GridContainer.js\";\nimport GridItem from \"../Grid/GridItem.js\"; // import Footer from \"components/Footer/Footer.js\";\n\nimport CheckoutTable from \"../CheckoutTable/CheckoutTable.js\";\nimport Button from \"../CustomButtons/Button.js\";\nimport Card from \"../Card/Card.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport { totalPrice, totalItemPrice } from '../cart.utils';\nimport { withRouter } from 'react-router-dom';\nimport shoppingCartStyle from \"../assets/jss/material-kit-pro-react/views/shoppingCartStyle.js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { fetchAllMasks, getPublicStripeKey } from '../actions';\nimport CheckoutForm from './CheckoutForm';\nimport { ButtonGroup, Table, UncontrolledTooltip } from \"reactstrap\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport update from 'react-addons-update';\nconst useStyles = makeStyles(shoppingCartStyle);\n\nfunction ShoppingCartPage({\n  history\n}) {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    allMasks,\n    cartItems,\n    hitCount\n  } = state;\n  const [usingCartItems, setUsingCartItems] = useState('');\n  const mobileSize = useMediaQuery('(max-width:600px)');\n  const stripePromise = getPublicStripeKey().then(key => {\n    console.log(\"key:\");\n    console.log(key);\n    return loadStripe(key);\n  });\n  let hitButton = useRef(0),\n      sessionIdVar,\n      newTotal,\n      sessionCartItemTotal = JSON.parse(sessionStorage.getItem('cartTotal')),\n      sumTotal = JSON.parse(sessionStorage.getItem('cartSum')),\n      sessionItems = JSON.parse(sessionStorage.getItem('cart'));\n  React.useEffect(() => {\n    fetchAllMasks(dispatch);\n  }, []);\n  useEffect(() => {\n    console.log(\"use effect hit!\");\n\n    if (cartItems == undefined || cartItems == 'null') {\n      console.log(\"CartItems is undefined\");\n    } else {\n      newTotal = cartItems.reduce((acc, cartItem) => acc + cartItem.quantity, 0);\n      sumTotal = cartItems.reduce((acc, cartItem) => acc + cartItem.price, 0);\n      sessionStorage.setItem('cart', JSON.stringify(cartItems));\n      sessionStorage.setItem('cartTotal', newTotal);\n      sessionStorage.setItem('cartSum', sumTotal);\n    }\n\n    return () => trueTotal = null;\n  }, [sessionItems, cartItems, hitCount, hitButton, sessionCartItemTotal]);\n\n  const addItemToCart = (id, title, price) => {\n    console.log(cartItems);\n    console.log(sessionItems);\n    const item = {\n      id,\n      title,\n      price\n    };\n    dispatch({\n      type: \"ADD_ITEM_TO_CART\",\n      payload: item\n    });\n    dispatch({\n      type: \"HIT_COUNT\",\n      payload: hitButton.current += 1\n    });\n    hitButton.current += 1;\n    let existingNum;\n\n    if (sessionStorage.getItem(id)) {\n      existingNum = parseInt(sessionStorage.getItem(id));\n      sessionStorage.setItem(`${id}`, existingNum + 1);\n    } else {\n      console.log(\"existingNum does not exist\");\n      sessionStorage.setItem(`${id}`, 1);\n    }\n  };\n\n  const goBackToShopping = () => {\n    history.push('/');\n    dispatch({\n      type: \"HIDE_STICKY_UNIT\",\n      payload: false\n    });\n  };\n\n  const removeItemFromCart = (id, title, price) => {\n    console.log(cartItems);\n    console.log(sessionItems);\n    const item = {\n      id,\n      title,\n      price\n    };\n    hitButton.current -= 1;\n    dispatch({\n      type: \"REMOVE_ITEM_FROM_CART\",\n      payload: item\n    });\n    dispatch({\n      type: \"HIT_COUNT\",\n      payload: hitButton.current -= 1\n    });\n    let myCachedTotal = JSON.parse(sessionStorage.getItem('cartTotal'));\n\n    if (myCachedTotal.length == 1) {\n      sessionStorage.setItem('cart', JSON.stringify([]));\n      sessionStorage.setItem('cartTotal', 0);\n      dispatch({\n        type: \"EMPTY_CART\"\n      });\n    }\n\n    let existingNum = parseInt(sessionStorage.getItem(id));\n    sessionStorage.setItem(`${id}`, existingNum - 1);\n    sessionStorage.removeItem(`${id}`);\n  };\n\n  const handleClick = (item, id) => {\n    hitButton.current -= 1;\n    let cartCount = JSON.parse(sessionStorage.getItem('cart'));\n    let existingNum = parseInt(sessionStorage.getItem(id));\n    sessionStorage.setItem(`${id}`, existingNum - 1);\n    sessionStorage.removeItem(`${id}`);\n\n    if (cartCount && cartCount.length == 1) {\n      sessionStorage.setItem('cart', JSON.stringify([]));\n      sessionStorage.setItem('cartTotal', 0);\n      dispatch({\n        type: \"EMPTY_CART\"\n      });\n    } else {\n      dispatch({\n        type: \"CLEAR_CART\",\n        payload: item\n      });\n    }\n  };\n\n  const totalPriceDivStyle = {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  const totalPriceOuterStyle = {\n    width: '10%',\n    justifyContent: 'spaceBetween'\n  };\n  const quantityStyle = {\n    textAlign: 'center'\n  };\n  const totalPriceStyle = {\n    width: '80%',\n    textAlign: 'center',\n    justifyContent: 'spaceBetween',\n    fontSize: '3em'\n  };\n  const noItemsMargin = {\n    margin: '10% 0 0 0'\n  };\n  const itemDiv = {\n    width: '80%',\n    textAlgin: 'center',\n    fontSize: '1.5em',\n    display: 'flex',\n    textAlign: 'center',\n    margin: 'auto',\n    flexDirection: 'column'\n  };\n  const innerItemDiv = {\n    justifyContent: 'spaceBetween',\n    width: '10%'\n  };\n  const lineItem = {\n    display: 'inlineBlock'\n  };\n  const classes = useStyles();\n  let maskTotal = cartItems ? totalPrice(cartItems) : totalPrice(sessionItems);\n  let clientTotal = parseFloat(maskTotal) + 5.00;\n  let trueTotal = parseFloat(sumTotal) + 5.00;\n  if (!cartItems && !sessionItems) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 41\n    }\n  }, \"loading checkout items\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Parallax, {\n    image: require(\"../assets/img/bg3.jpg\"),\n    filter: \"dark\",\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    md: 8,\n    sm: 8,\n    className: classNames(classes.mlAuto, classes.mrAuto, classes.textCenter),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, \"Your Cart\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.main, classes.mainRaised),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: () => goBackToShopping(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 29\n    }\n  }, \"Back to Shopping\"), (() => {\n    let sessionItems = JSON.parse(sessionStorage.getItem('cart'));\n\n    if (cartItems && cartItems.length >= 1) {\n      let cartItemCount = JSON.parse(sessionStorage.getItem('cart'));\n      let matchCartItemArr = [];\n      return cartItems.map((item, idx) => {\n        const {\n          id,\n          title,\n          price,\n          quantity\n        } = item;\n        console.log(\"quantity:\");\n        console.log(quantity);\n\n        if (allMasks) {\n          allMasks.map(mask => {\n            if (mask._id == id) {\n              matchCartItemArr.push(mask);\n            }\n\n            console.log(\"matchCartItemArr:\");\n            console.log(matchCartItemArr);\n          });\n        }\n\n        let currentItem = matchCartItemArr.filter(item => item._id == id);\n        let tableHeadData;\n\n        if (!mobileSize) {\n          tableHeadData = [\"\", \"PRODUCT\", \"PRICE\", \"QTY\", \"AMOUNT\", \"\"];\n        } else {\n          tableHeadData = [\"\", \"PRICE\", \"QTY\", \"AMOUNT\", \"\"];\n        }\n\n        let tableData = [\n        /*#__PURE__*/\n        // image\n        React.createElement(\"div\", {\n          className: classes.imgContainer,\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: item.url,\n          alt: \"...\",\n          className: classes.img,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 45\n          }\n        })),\n        /*#__PURE__*/\n        // PRODUCT\n        React.createElement(\"span\", {\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#jacket\",\n          className: classes.tdNameAnchor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 49\n          }\n        }, item.title), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 49\n          }\n        }), /*#__PURE__*/React.createElement(\"small\", {\n          className: classes.tdNameSmall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 49\n          }\n        }, item.description)),\n        /*#__PURE__*/\n        // PRICE\n        React.createElement(\"span\", {\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 47\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          className: classes.tdNumberSmall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 49\n          }\n        }, \"$\"), \" \", item.price),\n        /*#__PURE__*/\n        // QTY\n        React.createElement(\"span\", {\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 47\n          }\n        }, ` `, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.buttonGroup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"info\",\n          size: \"sm\",\n          round: true,\n          disabled: currentItem[0].quantity == quantity,\n          onClick: () => addItemToCart(id, title, price),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 51\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"now-ui-icons ui-1_simple-add\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 53\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          style: quantityStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 51\n          }\n        }, cartItemCount[idx].quantity), /*#__PURE__*/React.createElement(Button, {\n          color: \"info\",\n          size: \"sm\",\n          round: true,\n          onClick: () => removeItemFromCart(id, title, price),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 51\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"now-ui-icons ui-1_simple-delete\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 53\n          }\n        })))),\n        /*#__PURE__*/\n        // AMOUNT\n        React.createElement(\"span\", {\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 47\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          className: classes.tdNumberSmall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 49\n          }\n        }, \"$\"), \" \", totalItemPrice(item)), /*#__PURE__*/React.createElement(Tooltip, {\n          key: 1,\n          id: \"close1\",\n          title: \"Remove item\",\n          placement: \"left\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 47\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          link: true,\n          className: classes.actionButton,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Close, {\n          onClick: () => handleClick(item, id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 51\n          }\n        })))];\n\n        if (mobileSize) {\n          tableData = tableData.filter((data, idx) => {\n            if (idx !== 1) {\n              return data;\n            }\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(CheckoutTable, {\n          key: id,\n          tableHead: tableHeadData,\n          tableData: [tableData],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 45\n          }\n        });\n      }) // end of sessionItems map\n      ;\n    } else if (sessionItems && sessionItems.length >= 1) {\n      console.log(\"using sessionItems\"); // setUsingCartItems(false)\n\n      let cartItemCount = JSON.parse(sessionStorage.getItem('cart'));\n      let myMasks = JSON.parse(sessionStorage.getItem('allMasks'));\n      let matchCartItemArr = [];\n      return sessionItems.map((item, idx) => {\n        const {\n          id,\n          title,\n          price,\n          quantity\n        } = item;\n        console.log(\"quantity:\");\n        console.log(quantity);\n\n        if (myMasks) {\n          console.log(\"myMasks\");\n          console.log(myMasks);\n          myMasks.map(mask => {\n            if (mask._id == id) {\n              matchCartItemArr.push(mask);\n            }\n          });\n        }\n\n        let currentItem = matchCartItemArr.filter(item => item._id == id);\n        let tableHeadData;\n\n        if (!mobileSize) {\n          tableHeadData = [\"\", \"PRODUCT\", \"PRICE\", \"QTY\", \"AMOUNT\", \"\"];\n        } else {\n          tableHeadData = [\"\", \"PRICE\", \"QTY\", \"AMOUNT\", \"\"];\n        }\n\n        let tableData = [\n        /*#__PURE__*/\n        // image\n        React.createElement(\"div\", {\n          className: classes.imgContainer,\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 43\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: item.url,\n          alt: \"...\",\n          className: classes.img,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 43\n          }\n        })),\n        /*#__PURE__*/\n        // PRODUCT\n        React.createElement(\"span\", {\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 47\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#jacket\",\n          className: classes.tdNameAnchor,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 47\n          }\n        }, item.title), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 47\n          }\n        }), /*#__PURE__*/React.createElement(\"small\", {\n          className: classes.tdNameSmall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 47\n          }\n        }, item.description)),\n        /*#__PURE__*/\n        // PRICE\n        React.createElement(\"span\", {\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          className: classes.tdNumberSmall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 47\n          }\n        }, \"$\"), \" \", item.price),\n        /*#__PURE__*/\n        // QTY\n        React.createElement(\"span\", {\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 45\n          }\n        }, ` `, /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.buttonGroup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 47\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"info\",\n          size: \"sm\",\n          round: true,\n          disabled: currentItem[0].quantity == quantity,\n          onClick: () => addItemToCart(id, title, price),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"now-ui-icons ui-1_simple-add\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 51\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          style: quantityStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 49\n          }\n        }, cartItemCount[idx].quantity), /*#__PURE__*/React.createElement(Button, {\n          color: \"info\",\n          size: \"sm\",\n          round: true,\n          onClick: () => removeItemFromCart(id, title, price),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"now-ui-icons ui-1_simple-delete\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 51\n          }\n        })))),\n        /*#__PURE__*/\n        // AMOUNT\n        React.createElement(\"span\", {\n          key: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"small\", {\n          className: classes.tdNumberSmall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 47\n          }\n        }, \"$\"), \" \", totalItemPrice(item)), /*#__PURE__*/React.createElement(Tooltip, {\n          key: 1,\n          id: \"close1\",\n          title: \"Remove item\",\n          placement: \"left\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          link: true,\n          className: classes.actionButton,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 47\n          }\n        }, /*#__PURE__*/React.createElement(Close, {\n          onClick: () => handleClick(item, id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 49\n          }\n        })))];\n\n        if (mobileSize) {\n          tableData = tableData.filter((data, idx) => {\n            if (idx !== 1) {\n              return data;\n            }\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(CheckoutTable, {\n          key: id,\n          tableHead: tableHeadData,\n          tableData: [tableData],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 43\n          }\n        });\n      }) // end of sessionItems map\n      ;\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        style: noItemsMargin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 42\n        }\n      }, \"No items left in this cart\");\n    } // end of sessionItems length\n\n  })(), /*#__PURE__*/React.createElement(\"div\", {\n    style: itemDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: innerItemDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 47\n    }\n  }, \" Mask: $\", maskTotal)), /*#__PURE__*/React.createElement(\"div\", {\n    style: lineItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 47\n    }\n  }, \"Shipping: $5\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: innerItemDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: totalPriceDivStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: totalPriceOuterStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: totalPriceStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 45\n    }\n  }, \"Total: $\", clientTotal.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n    style: totalPriceOuterStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutForm, {\n    price: trueTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 43\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 41\n    }\n  }))))));\n}\n\nexport default withRouter(ShoppingCartPage);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/Checkout/Checkout.js"],"names":["React","useEffect","useContext","useRef","useState","AuthContext","Link","classNames","makeStyles","List","ListItem","Tooltip","Typography","Favorite","Close","Remove","Add","KeyboardArrowRight","Header","HeaderLinks","Parallax","Grid","GridContainer","GridItem","CheckoutTable","Button","Card","CardBody","totalPrice","totalItemPrice","withRouter","shoppingCartStyle","loadStripe","Elements","fetchAllMasks","getPublicStripeKey","CheckoutForm","ButtonGroup","Table","UncontrolledTooltip","useMediaQuery","update","useStyles","ShoppingCartPage","history","state","dispatch","allMasks","cartItems","hitCount","usingCartItems","setUsingCartItems","mobileSize","stripePromise","then","key","console","log","hitButton","sessionIdVar","newTotal","sessionCartItemTotal","JSON","parse","sessionStorage","getItem","sumTotal","sessionItems","undefined","reduce","acc","cartItem","quantity","price","setItem","stringify","trueTotal","addItemToCart","id","title","item","type","payload","current","existingNum","parseInt","goBackToShopping","push","removeItemFromCart","myCachedTotal","length","removeItem","handleClick","cartCount","totalPriceDivStyle","width","display","flexDirection","totalPriceOuterStyle","justifyContent","quantityStyle","textAlign","totalPriceStyle","fontSize","noItemsMargin","margin","itemDiv","textAlgin","innerItemDiv","lineItem","classes","maskTotal","clientTotal","parseFloat","require","container","mlAuto","mrAuto","textCenter","main","mainRaised","cartItemCount","matchCartItemArr","map","idx","mask","_id","currentItem","filter","tableHeadData","tableData","imgContainer","url","img","tdNameAnchor","tdNameSmall","description","tdNumberSmall","buttonGroup","tooltip","actionButton","data","myMasks","toFixed"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React, {useEffect,useContext,useRef,useState} from \"react\";\nimport AuthContext from '../AuthContext'\nimport {Link} from 'react-router-dom'\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\n// @material-ui/icons\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport Close from \"@material-ui/icons/Close\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport Add from \"@material-ui/icons/Add\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\n// core components\nimport Header from \"../Header/Header_Checkout.js\";\nimport HeaderLinks from \"../Header/HeaderLinks.js\";\nimport Parallax from \"../Parallax/Parallax.js\";\nimport Grid from '@material-ui/core/Grid';\nimport GridContainer from \"../Grid/GridContainer.js\";\nimport GridItem from \"../Grid/GridItem.js\";\n// import Footer from \"components/Footer/Footer.js\";\nimport CheckoutTable from \"../CheckoutTable/CheckoutTable.js\";\nimport Button from \"../CustomButtons/Button.js\";\nimport Card from \"../Card/Card.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport {totalPrice,totalItemPrice} from '../cart.utils'\nimport {withRouter} from 'react-router-dom'\nimport shoppingCartStyle from \"../assets/jss/material-kit-pro-react/views/shoppingCartStyle.js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport {fetchAllMasks,getPublicStripeKey} from '../actions'\nimport CheckoutForm from './CheckoutForm'\nimport { ButtonGroup, Table, UncontrolledTooltip } from \"reactstrap\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport update from 'react-addons-update'\n\nconst useStyles = makeStyles(shoppingCartStyle);\n\nfunction ShoppingCartPage({history}) {\n  const {state,dispatch} = useContext(AuthContext)\n  const {allMasks,cartItems,hitCount} = state;\n  const [usingCartItems,setUsingCartItems] = useState('');\n  const mobileSize = useMediaQuery('(max-width:600px)');\n  const stripePromise = getPublicStripeKey().then(key => {\n    console.log(\"key:\")\n    console.log(key)\n    return loadStripe(key)\n  });\n  let hitButton = useRef(0),\n      sessionIdVar,\n      newTotal,\n      sessionCartItemTotal = JSON.parse(sessionStorage.getItem('cartTotal')),\n      sumTotal = JSON.parse(sessionStorage.getItem('cartSum')),\n      sessionItems = JSON.parse(sessionStorage.getItem('cart'))\n\n  React.useEffect(() => {\n\n    fetchAllMasks(dispatch)\n  },[]);\n\n  useEffect(() => {\n    console.log(\"use effect hit!\")\n\n    if(cartItems == undefined || cartItems == 'null' ){\n      console.log(\"CartItems is undefined\")\n  } else{\n      newTotal = cartItems.reduce((acc,cartItem) => acc + cartItem.quantity,0)\n      sumTotal = cartItems.reduce((acc,cartItem) => acc + cartItem.price,0)\n      sessionStorage.setItem('cart',JSON.stringify(cartItems))\n      sessionStorage.setItem('cartTotal',newTotal)\n      sessionStorage.setItem('cartSum',sumTotal)\n  }\n  \n        return () => trueTotal = null;\n\n  },[sessionItems,cartItems,hitCount,hitButton,sessionCartItemTotal]);\n  \n  const addItemToCart = (id,title,price) =>{\n    console.log(cartItems)\n    console.log(sessionItems)\n    const item = {id,title,price};\n    dispatch({type:\"ADD_ITEM_TO_CART\",payload:item})\n    dispatch({type:\"HIT_COUNT\",payload:hitButton.current +=1})\n    \n    hitButton.current += 1\n\n    let existingNum\n    if(sessionStorage.getItem(id)){\n      existingNum = parseInt(sessionStorage.getItem(id));\n      sessionStorage.setItem(`${id}`,existingNum + 1)\n    } else{\n      console.log(\"existingNum does not exist\")\n      sessionStorage.setItem(`${id}`,1)\n    }\n}\n\nconst goBackToShopping = () =>{\n  history.push('/')\n  dispatch({type:\"HIDE_STICKY_UNIT\",payload:false})\n}\n\nconst removeItemFromCart = (id,title,price) =>{\n  console.log(cartItems)\n  console.log(sessionItems)\n  const item = {id,title,price};\n  hitButton.current -= 1\n  dispatch({type:\"REMOVE_ITEM_FROM_CART\",payload:item})\n  dispatch({type:\"HIT_COUNT\",payload:hitButton.current -=1})\n  let myCachedTotal = JSON.parse(sessionStorage.getItem('cartTotal'))\n \n\n  if(myCachedTotal.length == 1){\n    sessionStorage.setItem('cart',JSON.stringify([]));\n      sessionStorage.setItem('cartTotal',0)\n      dispatch({type:\"EMPTY_CART\"})\n  }\n    let existingNum = parseInt(sessionStorage.getItem(id));\n    sessionStorage.setItem(`${id}`,existingNum - 1)\n    sessionStorage.removeItem(`${id}`)\n}\n\n  const handleClick = (item,id) =>{\n    hitButton.current -= 1\n    let cartCount = JSON.parse(sessionStorage.getItem('cart'))\n    let existingNum = parseInt(sessionStorage.getItem(id));\n    sessionStorage.setItem(`${id}`,existingNum - 1)\n    sessionStorage.removeItem(`${id}`)\n    if(cartCount && cartCount.length == 1){\n        sessionStorage.setItem('cart',JSON.stringify([]));\n        sessionStorage.setItem('cartTotal',0)\n        dispatch({type:\"EMPTY_CART\"})\n    }else{\n        dispatch({type:\"CLEAR_CART\",payload:item})\n    }\n}\n\nconst totalPriceDivStyle = {\n  width:'100%',\n  display:'flex',\n  flexDirection:'row'\n}\n\nconst totalPriceOuterStyle = {\n  width:'10%',\n  justifyContent:'spaceBetween',\n}\n\nconst quantityStyle = {\n  textAlign:'center'\n}\nconst totalPriceStyle = {\n  width:'80%',\n  textAlign:'center',\n  justifyContent:'spaceBetween',\n  fontSize:'3em'\n}\n\nconst noItemsMargin = {\n    margin:'10% 0 0 0'\n}\n\nconst itemDiv = {\n    width:'80%',\n    textAlgin:'center',\n    fontSize:'1.5em',\n    display:'flex',\n    textAlign: 'center',\n    margin: 'auto',\n    flexDirection:'column'\n}\n\nconst innerItemDiv = {\n    justifyContent:'spaceBetween',\n    width:'10%',\n}\n\nconst lineItem = {\n    display:'inlineBlock',\n}\n\nconst classes = useStyles();\nlet maskTotal = cartItems ? totalPrice(cartItems) :totalPrice(sessionItems)\nlet clientTotal = parseFloat(maskTotal) + 5.00\nlet trueTotal = parseFloat(sumTotal) + 5.00;\nif(!cartItems && !sessionItems) return (<div>loading checkout items</div>)\n\n  return (\n    <div>\n      <Parallax\n        image={require(\"../assets/img/bg3.jpg\")}\n        filter=\"dark\"\n        small\n      >\n        <div className={classes.container}>\n          <GridContainer>\n            <GridItem\n              md={8}\n              sm={8}\n              className={classNames(\n                classes.mlAuto,\n                classes.mrAuto,\n                classes.textCenter\n              )}\n            >\n              <h2 className={classes.title}>Your Cart</h2>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </Parallax>\n\n                    <div className={classNames(classes.main, classes.mainRaised)}>\n                      <div className={classes.container}>\n                        <Card plain>\n                          <CardBody plain>\n                            <Button color=\"info\" onClick={() => goBackToShopping()}>Back to Shopping</Button>\n                    {(() => {\n                      let sessionItems = JSON.parse(sessionStorage.getItem('cart'))\n                      if(cartItems && cartItems.length >= 1){\n                        let cartItemCount = JSON.parse(sessionStorage.getItem('cart'))\n                        let matchCartItemArr = [];\n  \n                        return(\n                          cartItems.map((item,idx) =>{\n                            const {id,title,price,quantity} = item;\n                            console.log(\"quantity:\")\n                            console.log(quantity)\n  \n                            if(allMasks){\n                            allMasks.map(mask =>{\n                              if(mask._id == id){ \n                                matchCartItemArr.push(mask)\n                              }\n                              console.log(\"matchCartItemArr:\")\n                              console.log(matchCartItemArr)\n                            })\n                          }\n                            let currentItem = matchCartItemArr.filter(item => item._id == id)\n                        \n                            let tableHeadData;\n  \n                            if(!mobileSize){\n                              tableHeadData = [\n                                \"\",\n                                \"PRODUCT\",\n                                \"PRICE\",\n                                \"QTY\",\n                                \"AMOUNT\",\n                                \"\"\n                              ]\n                            } else{\n                              tableHeadData = [\n                                \"\",\n                                \"PRICE\",\n                                \"QTY\",\n                                \"AMOUNT\",\n                                \"\"\n                              ]                            \n                            }\n  \n                              let tableData = [  \n                                    // image\n                                            <div className={classes.imgContainer} key={1}>\n                                            <img src={item.url} alt=\"...\" className={classes.img} />\n                                              </div>,\n                                    // PRODUCT\n                                                <span key={1}>\n                                                <a href=\"#jacket\" className={classes.tdNameAnchor}>\n                                                  {item.title}\n                                                </a>\n                                                <br />\n                                                <small className={classes.tdNameSmall}>\n                                                  {item.description}\n                                                </small>\n                                              </span>,\n                                    // PRICE\n                                              <span key={1}>\n                                                <small className={classes.tdNumberSmall}>$</small> {item.price}\n                                              </span>,\n                                  // QTY\n                                              <span key={1}>\n                                                {` `}\n                                                <div className={classes.buttonGroup}>\n                                                \n                                                  <Button\n                                                    color=\"info\"\n                                                    size=\"sm\"\n                                                    round\n                                                    disabled={currentItem[0].quantity == quantity}\n                                                    onClick={() => addItemToCart(id,title,price)}\n                                                  >\n                                                    <i className=\"now-ui-icons ui-1_simple-add\"></i>\n                                                  </Button>\n                                                  <p style={quantityStyle}>{cartItemCount[idx].quantity}</p>\n                                                  <Button\n                                                    color=\"info\"\n                                                    size=\"sm\"\n                                                    round\n                                                    onClick={() => removeItemFromCart(id,title,price)}\n                                                  >\n                                                    <i className=\"now-ui-icons ui-1_simple-delete\"></i>\n                                                  </Button>\n  \n                                                </div>\n                                              </span>,\n                                  // AMOUNT\n                                              <span key={1}>\n                                                <small className={classes.tdNumberSmall}>$</small> {totalItemPrice(item)}\n                                              </span>,\n                                              <Tooltip\n                                                key={1}\n                                                id=\"close1\"\n                                                title=\"Remove item\"\n                                                placement=\"left\"\n                                                classes={{ tooltip: classes.tooltip }}\n                                              >\n                                                <Button link className={classes.actionButton}>\n                                                  <Close  onClick={() => handleClick(item,id)}/>\n                                                </Button>\n                                              </Tooltip>\n                                        ]\n  \n                                        if(mobileSize){\n                                          tableData = tableData.filter((data,idx) =>{\n                                                if(idx !== 1){\n                                                  return data \n                                                }\n                                          })\n                                        }\n  \n                                      return(\n                                            <CheckoutTable\n                                                key={id}\n                                                tableHead={tableHeadData}\n                                                tableData={[tableData]}\n                                              />\n                                            )\n                                    })\n                                            // end of sessionItems map\n  \n                              )\n                        } \n                        else if(sessionItems && sessionItems.length >= 1) {\n                      console.log(\"using sessionItems\")\n                      // setUsingCartItems(false)\n                      let cartItemCount = JSON.parse(sessionStorage.getItem('cart'))\n                      let myMasks = JSON.parse(sessionStorage.getItem('allMasks'))\n                      let matchCartItemArr = [];\n\n                      return(\n                        sessionItems.map((item,idx) =>{\n                          const {id,title,price,quantity} = item;\n                          console.log(\"quantity:\")\n                          console.log(quantity)\n\n                          if(myMasks){\n                            console.log(\"myMasks\")\n                            console.log(myMasks)\n                            myMasks.map(mask =>{\n                            if(mask._id == id){ \n                              matchCartItemArr.push(mask)\n                            }\n                          })\n                        }\n                          let currentItem = matchCartItemArr.filter(item => item._id == id)\n                      \n                          let tableHeadData;\n\n                          if(!mobileSize){\n                            tableHeadData = [\n                              \"\",\n                              \"PRODUCT\",\n                              \"PRICE\",\n                              \"QTY\",\n                              \"AMOUNT\",\n                              \"\"\n                            ]\n                          } else{\n                            tableHeadData = [\n                              \"\",\n                              \"PRICE\",\n                              \"QTY\",\n                              \"AMOUNT\",\n                              \"\"\n                            ]                            \n                          }\n\n                            let tableData = [  \n                                  // image\n                                          <div className={classes.imgContainer} key={1}>\n                                          <img src={item.url} alt=\"...\" className={classes.img} />\n                                            </div>,\n                                  // PRODUCT\n                                              <span key={1}>\n                                              <a href=\"#jacket\" className={classes.tdNameAnchor}>\n                                                {item.title}\n                                              </a>\n                                              <br />\n                                              <small className={classes.tdNameSmall}>\n                                                {item.description}\n                                              </small>\n                                            </span>,\n                                  // PRICE\n                                            <span key={1}>\n                                              <small className={classes.tdNumberSmall}>$</small> {item.price}\n                                            </span>,\n                                // QTY\n                                            <span key={1}>\n                                              {` `}\n                                              <div className={classes.buttonGroup}>\n                                              \n                                                <Button\n                                                  color=\"info\"\n                                                  size=\"sm\"\n                                                  round\n                                                  disabled={currentItem[0].quantity == quantity}\n                                                  onClick={() => addItemToCart(id,title,price)}\n                                                >\n                                                  <i className=\"now-ui-icons ui-1_simple-add\"></i>\n                                                </Button>\n                                                <p style={quantityStyle}>{cartItemCount[idx].quantity}</p>\n                                                <Button\n                                                  color=\"info\"\n                                                  size=\"sm\"\n                                                  round\n                                                  onClick={() => removeItemFromCart(id,title,price)}\n                                                >\n                                                  <i className=\"now-ui-icons ui-1_simple-delete\"></i>\n                                                </Button>\n\n                                              </div>\n                                            </span>,\n                                // AMOUNT\n                                            <span key={1}>\n                                              <small className={classes.tdNumberSmall}>$</small> {totalItemPrice(item)}\n                                            </span>,\n                                            <Tooltip\n                                              key={1}\n                                              id=\"close1\"\n                                              title=\"Remove item\"\n                                              placement=\"left\"\n                                              classes={{ tooltip: classes.tooltip }}\n                                            >\n                                              <Button link className={classes.actionButton}>\n                                                <Close  onClick={() => handleClick(item,id)}/>\n                                              </Button>\n                                            </Tooltip>\n                                      ]\n\n                                      if(mobileSize){\n                                        tableData = tableData.filter((data,idx) =>{\n                                              if(idx !== 1){\n                                                return data \n                                              }\n                                        })\n                                      }\n\n                                    return(\n                                          <CheckoutTable\n                                              key={id}\n                                              tableHead={tableHeadData}\n                                              tableData={[tableData]}\n                                            />\n                                          )\n                                  })\n                                          // end of sessionItems map\n                            )\n                          } else {return <p style={noItemsMargin}>No items left in this cart</p>}\n                                      // end of sessionItems length\n                                    })()\n                                    }\n                                          <div style={itemDiv}>\n                                            <div style={innerItemDiv}></div>\n                                            <div style={lineItem}>\n                                              <p> Mask: ${maskTotal}</p>\n                                            </div>\n                                            <div style={lineItem}>\n                                              <p>Shipping: $5</p>\n                                              </div>\n                                            <div style={innerItemDiv}></div>\n                                          </div>                            \n                                      <div style={totalPriceDivStyle}>\n                                        <div style={totalPriceOuterStyle}></div>\n                                            <p style={totalPriceStyle}>Total: ${clientTotal.toFixed(2)}</p>\n                                        <div style={totalPriceOuterStyle}></div>\n                                          </div>\n                                      <Grid item xs={3}></Grid>\n                                        <Grid item xs={3}>\n                                          </Grid>\n                                          <Grid item xs={6}>\n                                        <Elements stripe={stripePromise}>\n                                          <CheckoutForm price={trueTotal} />\n                                        </Elements>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                          </Grid>\n                                      </CardBody>\n                                    </Card>\n                                    </div>\n                                    </div>\n                            </div>)}\nexport default withRouter(ShoppingCartPage)"]},"metadata":{},"sourceType":"module"}