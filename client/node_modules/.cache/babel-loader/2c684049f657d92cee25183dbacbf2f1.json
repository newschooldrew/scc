{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/CustomButton/CustomButton.js\";\nimport React, { useRef, useContext } from 'react';\nimport AuthContext from '../AuthContext'; // import Button from \"../CustomButtons/Button.js\";\n\nimport { Button } from \"reactstrap\";\n\nconst CustomButton = ({\n  type,\n  id,\n  title,\n  price,\n  url,\n  qty\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    allMasks,\n    cartItems\n  } = state;\n  let sessionCartItems = JSON.parse(sessionStorage.getItem('cart'));\n  let hitButton = useRef(0);\n  const buttonStyle = {\n    'fontSize': '2em'\n  };\n\n  const addItemToCart = (id, title, price, url) => {\n    const item = {\n      id,\n      title,\n      price,\n      url\n    };\n    dispatch({\n      type: \"ADD_ITEM_TO_CART\",\n      payload: item\n    });\n    dispatch({\n      type: \"HIT_COUNT\",\n      payload: hitButton.current += 1\n    });\n    let foundItem;\n    let existingNum;\n\n    if (sessionStorage.getItem(id)) {\n      existingNum = parseInt(sessionStorage.getItem(id));\n      sessionStorage.setItem(`${id}`, existingNum + 1);\n    } else {\n      console.log(\"existingNum does not exist\");\n      sessionStorage.setItem(`${id}`, 1);\n    }\n  };\n\n  const removeItemFromCart = (id, title, price) => {\n    const item = {\n      id,\n      title,\n      price\n    };\n    dispatch({\n      type: \"REMOVE_ITEM_FROM_CART\",\n      payload: item\n    });\n    dispatch({\n      type: \"HIT_COUNT\",\n      payload: hitButton.current -= 1\n    });\n    let myCachedTotal = JSON.parse(sessionStorage.getItem('cartTotal'));\n\n    if (myCachedTotal == 1) {\n      sessionStorage.setItem('cart', JSON.stringify([]));\n      sessionStorage.setItem('cartTotal', 0);\n      dispatch({\n        type: \"EMPTY_CART\"\n      });\n    }\n\n    let existingNum = parseInt(sessionStorage.getItem(id));\n    sessionStorage.setItem(`${id}`, existingNum - 1);\n  };\n\n  let limitReached, disabled, found;\n\n  if (sessionStorage.getItem(id) == qty) {\n    limitReached = true;\n  }\n\n  if (sessionCartItems && sessionCartItems.length > 0) {\n    let found = sessionStorage.getItem(`${id}`);\n\n    try {\n      if (found == 0 || found == null) {\n        disabled = false;\n      }\n\n      if (found >= 1) {\n        disabled = true;\n      }\n    } catch (e) {\n      console.log(\"e\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, type == \"positive\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"button\",\n    onClick: e => addItemToCart(id, title, price, url),\n    disabled: limitReached || qty == 0,\n    style: buttonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"+\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    type: \"button\",\n    onClick: () => removeItemFromCart(id, title, price, url),\n    disabled: !disabled || qty == 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"-\")));\n};\n\nexport default CustomButton;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/CustomButton/CustomButton.js"],"names":["React","useRef","useContext","AuthContext","Button","CustomButton","type","id","title","price","url","qty","state","dispatch","allMasks","cartItems","sessionCartItems","JSON","parse","sessionStorage","getItem","hitButton","buttonStyle","addItemToCart","item","payload","current","foundItem","existingNum","parseInt","setItem","console","log","removeItemFromCart","myCachedTotal","stringify","limitReached","disabled","found","length","e"],"mappings":"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","sourcesContent":["import React, {useRef,useContext} from 'react'\nimport AuthContext from '../AuthContext'\n// import Button from \"../CustomButtons/Button.js\";\nimport {\n    Button\n  } from \"reactstrap\";\n\nconst CustomButton = ({type,id,title,price,url,qty}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {allMasks,cartItems} = state;\n\n    let sessionCartItems = JSON.parse(sessionStorage.getItem('cart'))\n\n    let hitButton = useRef(0)\n\n    const buttonStyle = {\n        'fontSize':'2em'\n    }\n\n    const addItemToCart = (id,title,price,url) =>{\n        const item = {id,title,price,url};\n        dispatch({type:\"ADD_ITEM_TO_CART\",payload:item})\n        dispatch({type:\"HIT_COUNT\",payload:hitButton.current +=1})\n        let foundItem;\n    \n        let existingNum;\n          if(sessionStorage.getItem(id)){\n            existingNum = parseInt(sessionStorage.getItem(id));\n            sessionStorage.setItem(`${id}`,existingNum + 1)\n          } else{\n            console.log(\"existingNum does not exist\")\n            sessionStorage.setItem(`${id}`,1)\n          }\n    }\n    \n    const removeItemFromCart = (id,title,price) =>{\n        const item = {id,title,price};\n        dispatch({type:\"REMOVE_ITEM_FROM_CART\",payload:item})\n        dispatch({type:\"HIT_COUNT\",payload:hitButton.current -=1})\n        let myCachedTotal = JSON.parse(sessionStorage.getItem('cartTotal'))\n        \n        if(myCachedTotal == 1){\n            sessionStorage.setItem('cart',JSON.stringify([]));\n            sessionStorage.setItem('cartTotal',0)\n            dispatch({type:\"EMPTY_CART\"})\n        }\n        \n            let existingNum = parseInt(sessionStorage.getItem(id));\n            sessionStorage.setItem(`${id}`,existingNum - 1)\n    \n    }\n\n    let limitReached,\n        disabled,\n        found;\n    if(sessionStorage.getItem(id) == qty){\n        limitReached = true;\n    }\n\n    if(sessionCartItems && sessionCartItems.length > 0){\n        let found = sessionStorage.getItem(`${id}`)\n\n        try{\n            if(found == 0 || found == null){\n                disabled=false\n            }\n\n            if(found >= 1){\n                disabled=true\n            }\n        } catch(e){\n            console.log(\"e\")\n        }\n    }\n\n    return (<>\n        {type == \"positive\" ? (\n            <>\n                <Button color=\"success\" type=\"button\"\n                    onClick={e => addItemToCart(id,title,price,url)}\n                    disabled={limitReached || qty == 0}\n                    style={buttonStyle}\n                >\n                    +\n                </Button>\n            </>\n        ): (\n            <>\n                <Button color=\"success\" type=\"button\"\n                    onClick={() => removeItemFromCart(id,title,price,url)}\n                    disabled={!disabled || qty == 0}\n                >\n                    -\n                    </Button>\n            </>\n        )}\n    </>)\n}\n\nexport default CustomButton"]},"metadata":{},"sourceType":"module"}