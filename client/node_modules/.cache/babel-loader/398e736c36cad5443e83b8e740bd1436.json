{"ast":null,"code":"import _toConsumableArray from\"/Users/andrewperez/Documents/projects/scc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/andrewperez/Documents/projects/scc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var addItemToCart=function addItemToCart(cartItems,cartItemToAdd){console.log(\"cartItems in util\");console.log(cartItems);console.log(typeof cartItems);var existingCartItem=cartItems.find(function(cartItem){return cartItem.id===cartItemToAdd.id;});if(existingCartItem){return cartItems.map(function(cartItem){return(// returns a new array\n// this returns a new version of our state\n// so our components know how to re render properly\ncartItem.id===cartItemToAdd.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity+1}):cartItem);});}return[].concat(_toConsumableArray(cartItems),[_objectSpread(_objectSpread({},cartItemToAdd),{},{quantity:1})]);};export var removeItemFromCart=function removeItemFromCart(cartItems,cartItemToRemove,cartTotal){console.log(\"cartTotal:\");console.log(cartTotal);// find out if there is an item in the count\nconsole.log(\"cartItems from removeItem fn\");console.log(cartItems);var existingCartItem=cartItems.find(function(cartItem){return cartItem.id===cartItemToRemove.id;});// check if quantity is one\n// you want to keep the values where they dont match\nif(existingCartItem&&existingCartItem.quantity==1){return cartItems.filter(function(cartItem){return cartItem.id!==cartItemToRemove.id;});}// bring in cartItem\nreturn cartItems.map(function(cartItem){return cartItem.id==cartItemToRemove.id?_objectSpread(_objectSpread({},cartItem),{},{quantity:cartItem.quantity-1}):cartItem;}// otherwise decrease the quantity                \n// the new value of quantity is whatever that items quantity is, minus 1\n);};export var totalPrice=function totalPrice(items){console.log(\"total Price items\");console.log(items);var price=items.reduce(function(acc,item){return acc+item.quantity*item.price;},0);return price.toFixed(2);};export var totalItemPrice=function totalItemPrice(item){console.log(\"item:\");console.log(item);var price=item.quantity*item.price;return price.toFixed(2);};","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","console","log","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","cartTotal","filter","totalPrice","items","price","reduce","acc","item","toFixed","totalItemPrice"],"mappings":"qVAAA,MAAO,IAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,SAAD,CAAYC,aAAZ,CAA6B,CACtDC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,SAAZ,EACAE,OAAO,CAACC,GAAR,CAAY,MAAOH,CAAAA,SAAnB,EACI,GAAMI,CAAAA,gBAAgB,CAAGJ,SAAS,CAACK,IAAV,CACrB,SAAAC,QAAQ,QAAGA,CAAAA,QAAQ,CAACC,EAAT,GAAgBN,aAAa,CAACM,EAAjC,EADa,CAAzB,CAGA,GAAGH,gBAAH,CAAoB,CAChB,MAAOJ,CAAAA,SAAS,CAACQ,GAAV,CAAc,SAAAF,QAAQ,QACrB;AACA;AACA;AACAA,QAAQ,CAACC,EAAT,GAAgBN,aAAa,CAACM,EAA9B,gCACMD,QADN,MACgBG,QAAQ,CAACH,QAAQ,CAACG,QAAT,CAAoB,CAD7C,GAEEH,QANmB,GAAtB,CAAP,CAQH,CACD,mCAAWN,SAAX,kCAAyBC,aAAzB,MAAuCQ,QAAQ,CAAC,CAAhD,KACH,CAlBE,CAoBP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACV,SAAD,CAAWW,gBAAX,CAA4BC,SAA5B,CAA0C,CACpEV,OAAO,CAACC,GAAR,CAAY,YAAZ,EACAD,OAAO,CAACC,GAAR,CAAYS,SAAZ,EACA;AACAV,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,SAAZ,EACA,GAAMI,CAAAA,gBAAgB,CAAGJ,SAAS,CAACK,IAAV,CACrB,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBI,gBAAgB,CAACJ,EAArC,EADa,CAAzB,CAGQ;AACA;AACA,GAAGH,gBAAgB,EAAIA,gBAAgB,CAACK,QAAjB,EAA6B,CAApD,CAAsD,CAClD,MAAOT,CAAAA,SAAS,CAACa,MAAV,CAAiB,SAAAP,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAgBI,gBAAgB,CAACJ,EAArC,EAAzB,CAAP,CACC,CACG;AACH,MAAOP,CAAAA,SAAS,CAACQ,GAAV,CAAc,SAAAF,QAAQ,QACtBA,CAAAA,QAAQ,CAACC,EAAT,EAAeI,gBAAgB,CAACJ,EAAhC,gCACMD,QADN,MACeG,QAAQ,CAAEH,QAAQ,CAACG,QAAT,CAAoB,CAD7C,GAEEH,QAHoB,EAI1B;AACA;AALI,CAAP,CAQJ,CAvBV,CAyBP,MAAO,IAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAG,CAC9Bb,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYY,KAAZ,EACA,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAa,SAACC,GAAD,CAAKC,IAAL,QAAcD,CAAAA,GAAG,CAAGC,IAAI,CAACV,QAAL,CAAgBU,IAAI,CAACH,KAAzC,EAAb,CAA4D,CAA5D,CAAZ,CACA,MAAOA,CAAAA,KAAK,CAACI,OAAN,CAAc,CAAd,CAAP,CACH,CALM,CAOP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAF,IAAI,CAAI,CAClCjB,OAAO,CAACC,GAAR,CAAY,OAAZ,EACAD,OAAO,CAACC,GAAR,CAAYgB,IAAZ,EACA,GAAIH,CAAAA,KAAK,CAAGG,IAAI,CAACV,QAAL,CAAgBU,IAAI,CAACH,KAAjC,CACA,MAAOA,CAAAA,KAAK,CAACI,OAAN,CAAc,CAAd,CAAP,CACH,CALM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) =>{\n    console.log(\"cartItems in util\")\n    console.log(cartItems)\n    console.log(typeof cartItems)\n        const existingCartItem = cartItems.find(\n            cartItem =>cartItem.id === cartItemToAdd.id\n            )\n        if(existingCartItem){\n            return cartItems.map(cartItem =>\n                    // returns a new array\n                    // this returns a new version of our state\n                    // so our components know how to re render properly\n                    cartItem.id === cartItemToAdd.id\n                    ? {...cartItem, quantity:cartItem.quantity + 1}\n                    : cartItem\n            )\n        }\n        return [...cartItems,{...cartItemToAdd,quantity:1}]   \n    }\n\nexport const removeItemFromCart = (cartItems,cartItemToRemove,cartTotal) => {\n        console.log(\"cartTotal:\")\n        console.log(cartTotal)\n        // find out if there is an item in the count\n        console.log(\"cartItems from removeItem fn\")\n        console.log(cartItems)\n        const existingCartItem = cartItems.find(\n            cartItem => cartItem.id === cartItemToRemove.id\n            )\n                // check if quantity is one\n                // you want to keep the values where they dont match\n                if(existingCartItem && existingCartItem.quantity == 1){\n                    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\n                    }\n                        // bring in cartItem\n                     return cartItems.map(cartItem => \n                            cartItem.id == cartItemToRemove.id\n                            ? {...cartItem,quantity: cartItem.quantity - 1}\n                            : cartItem\n                        // otherwise decrease the quantity                \n                        // the new value of quantity is whatever that items quantity is, minus 1\n                            \n                    )\n                }\n\nexport const totalPrice = items =>{\n    console.log(\"total Price items\")\n    console.log(items)\n    let price = items.reduce((acc,item) => acc + item.quantity * item.price,0);\n    return price.toFixed(2);\n}\n\nexport const totalItemPrice = item => {\n    console.log(\"item:\")\n    console.log(item)\n    let price = item.quantity * item.price;\n    return price.toFixed(2);\n}"]},"metadata":{},"sourceType":"module"}