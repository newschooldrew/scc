{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/Checkout/Checkout.js\";\n\n/*eslint-disable*/\nimport React, { useContext } from \"react\";\nimport AuthContext from '../AuthContext';\nimport { Link } from 'react-router-dom'; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\"; // @material-ui/icons\n\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport Close from \"@material-ui/icons/Close\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport Add from \"@material-ui/icons/Add\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\"; // core components\n\nimport Header from \"../Header/Header_Checkout.js\";\nimport HeaderLinks from \"../Header/HeaderLinks.js\";\nimport Parallax from \"../Parallax/Parallax.js\";\nimport Grid from '@material-ui/core/Grid';\nimport GridContainer from \"../Grid/GridContainer.js\";\nimport GridItem from \"../Grid/GridItem.js\"; // import Footer from \"components/Footer/Footer.js\";\n\nimport CheckoutTable from \"../CheckoutTable/CheckoutTable.js\";\nimport Button from \"../CustomButtons/Button.js\";\nimport Card from \"../Card/Card.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport { totalPrice, totalItemPrice } from '../cart.utils';\nimport { withRouter } from 'react-router-dom';\nimport shoppingCartStyle from \"../assets/jss/material-kit-pro-react/views/shoppingCartStyle.js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { fetchAllMasks, getPublicStripeKey } from '../actions';\nimport CheckoutForm from './CheckoutForm';\nconst useStyles = makeStyles(shoppingCartStyle);\n\nfunction ShoppingCartPage({\n  history\n}) {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    allMasks,\n    cartItems\n  } = state;\n  const stripePromise = getPublicStripeKey().then(key => {\n    console.log(\"key:\");\n    console.log(key);\n    return loadStripe(key);\n  });\n  React.useEffect(() => {\n    console.log(\"cartItems:\");\n    console.log(cartItems);\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n    fetchAllMasks(dispatch);\n  }, []);\n\n  const addItemToCart = (id, title, price) => {\n    console.log(\"add item from cart\");\n    const item = {\n      id,\n      title,\n      price\n    };\n    dispatch({\n      type: \"ADD_ITEM_TO_CART\",\n      payload: item\n    });\n    console.log(\"add item to cart in checkout being hit\");\n\n    if (sessionStorage.getItem(id)) {\n      let existingNum = parseInt(sessionStorage.getItem(id));\n      console.log(\"existingNum exists\");\n      console.log(existingNum);\n      sessionStorage.setItem(`${id}`, existingNum + 1);\n    } else {\n      console.log(\"no luck this time\");\n    }\n  };\n\n  const goBackToShopping = () => {\n    history.push('/');\n  };\n\n  const removeItemFromCart = (id, title, price) => {\n    console.log(\"remove item from cart\");\n    const item = {\n      id,\n      title,\n      price\n    };\n    dispatch({\n      type: \"REMOVE_ITEM_FROM_CART\",\n      payload: item\n    });\n    let myCachedTotal = JSON.parse(sessionStorage.getItem('cartTotal'));\n    console.log(\"myCachedTotal:\");\n    console.log(myCachedTotal);\n\n    if (myCachedTotal == 1) {\n      console.log(\"Clear cart\");\n      sessionStorage.removeItem('cart');\n      sessionStorage.setItem('cartTotal', 0);\n    }\n\n    let existingNum = parseInt(sessionStorage.getItem(id));\n    console.log(\"existingNum exists\");\n    console.log(existingNum);\n    sessionStorage.setItem(`${id}`, existingNum - 1);\n  };\n\n  const handleClick = item => {\n    let cartCount = JSON.parse(sessionStorage.getItem('cart'));\n\n    if (cartCount && cartCount.length == 1) {\n      sessionStorage.removeItem('cart');\n      sessionStorage.setItem('cartTotal', 0);\n    } else {\n      dispatch({\n        type: \"CLEAR_CART\",\n        payload: item\n      });\n    }\n  };\n\n  const classes = useStyles();\n  let sessionItems = JSON.parse(sessionStorage.getItem('cart'));\n  if (!cartItems && !sessionItems) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 41\n    }\n  }, \"loading checkout items\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Parallax, {\n    image: require(\"../assets/img/bg3.jpg\"),\n    filter: \"dark\",\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GridItem, {\n    md: 8,\n    sm: 8,\n    className: classNames(classes.mlAuto, classes.mrAuto, classes.textCenter),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Your Cart\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(classes.main, classes.mainRaised),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: () => goBackToShopping(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, \"Back to Shopping\"), (() => {\n    if (sessionItems && sessionItems.length > 0) {\n      let cartItemCount = JSON.parse(sessionStorage.getItem('cart'));\n      let matchCartItemArr = [];\n      let matchCartItem;\n      sessionItems.map(item => {\n        matchCartItem = allMasks.find(mask => mask.id == item._id);\n\n        if (matchCartItem !== undefined) {\n          matchCartItemArr.push(matchCartItem);\n        }\n      });\n      return sessionItems.map((item, idx) => {\n        const {\n          id,\n          title,\n          price\n        } = item;\n        let limitReached;\n        allMasks.map(mask => {\n          sessionItems.map(item => {\n            if (parseInt(sessionStorage.getItem(item.id)) == mask.quantity) {\n              limitReached = true;\n            } else {\n              limitReached = false;\n            }\n          });\n        });\n        return /*#__PURE__*/React.createElement(CheckoutTable, {\n          key: id,\n          tableHead: [\"\", \"PRODUCT\", \"COLOR\", \"SIZE\", \"PRICE\", \"QTY\", \"AMOUNT\", \"\"],\n          tableData: [[/*#__PURE__*/React.createElement(\"div\", {\n            className: classes.imgContainer,\n            key: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: item.url,\n            alt: \"...\",\n            className: classes.img,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(\"span\", {\n            key: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: \"#jacket\",\n            className: classes.tdNameAnchor,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 41\n            }\n          }, item.title), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 41\n            }\n          }), /*#__PURE__*/React.createElement(\"small\", {\n            className: classes.tdNameSmall,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 41\n            }\n          }, item.description)), \"Red\", \"M\", /*#__PURE__*/React.createElement(\"span\", {\n            key: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 39\n            }\n          }, /*#__PURE__*/React.createElement(\"small\", {\n            className: classes.tdNumberSmall,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 41\n            }\n          }, \"$\"), \" \", item.price), /*#__PURE__*/React.createElement(\"span\", {\n            key: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 39\n            }\n          }, ` `, /*#__PURE__*/React.createElement(\"div\", {\n            className: classes.buttonGroup,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            color: \"info\",\n            size: \"sm\",\n            round: true,\n            className: classes.firstButton,\n            onClick: () => removeItemFromCart(id, title, price),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(Remove, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 45\n            }\n          })), cartItemCount[idx].quantity, /*#__PURE__*/React.createElement(Button, {\n            color: \"info\",\n            size: \"sm\",\n            round: true,\n            disabled: limitReached,\n            className: classes.lastButton,\n            onClick: () => addItemToCart(id, title, price),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 43\n            }\n          }, /*#__PURE__*/React.createElement(Add, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 45\n            }\n          })))), /*#__PURE__*/React.createElement(\"span\", {\n            key: 1,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 39\n            }\n          }, /*#__PURE__*/React.createElement(\"small\", {\n            className: classes.tdNumberSmall,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 41\n            }\n          }, \"$\"), \" \", totalItemPrice(item)), /*#__PURE__*/React.createElement(Tooltip, {\n            key: 1,\n            id: \"close1\",\n            title: \"Remove item\",\n            placement: \"left\",\n            classes: {\n              tooltip: classes.tooltip\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 39\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            link: true,\n            className: classes.actionButton,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(Close, {\n            onClick: () => handleClick(item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 43\n            }\n          })))]],\n          tableShopping: true,\n          customHeadCellClasses: [classes.textCenter, classes.description, classes.description, classes.textRight, classes.textRight, classes.textRight],\n          customHeadClassesForCells: [0, 2, 3, 4, 5, 6],\n          customCellClasses: [classes.tdName, classes.customFont, classes.customFont, classes.tdNumber, classes.tdNumber + \" \" + classes.tdNumberAndButtonGroup, classes.tdNumber + \" \" + classes.textCenter],\n          customClassesForCells: [1, 2, 3, 4, 5, 6],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }\n        });\n      }) // end of sessionItems map\n      ;\n    } // end of sessionItems length\n    else {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 52\n          }\n        }, \"No items left in this cart\");\n      }\n  })(), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 41\n    }\n  }, \"Total\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 45\n    }\n  }, \"$\"), totalPrice(sessionItems || cartItems))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutForm, {\n    price: totalPrice(sessionItems || cartItems),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 43\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 41\n    }\n  }))))));\n}\n\nexport default withRouter(ShoppingCartPage);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/Checkout/Checkout.js"],"names":["React","useContext","AuthContext","Link","classNames","makeStyles","List","ListItem","Tooltip","Typography","Favorite","Close","Remove","Add","KeyboardArrowRight","Header","HeaderLinks","Parallax","Grid","GridContainer","GridItem","CheckoutTable","Button","Card","CardBody","totalPrice","totalItemPrice","withRouter","shoppingCartStyle","loadStripe","Elements","fetchAllMasks","getPublicStripeKey","CheckoutForm","useStyles","ShoppingCartPage","history","state","dispatch","allMasks","cartItems","stripePromise","then","key","console","log","useEffect","window","scrollTo","document","body","scrollTop","addItemToCart","id","title","price","item","type","payload","sessionStorage","getItem","existingNum","parseInt","setItem","goBackToShopping","push","removeItemFromCart","myCachedTotal","JSON","parse","removeItem","handleClick","cartCount","length","classes","sessionItems","require","container","mlAuto","mrAuto","textCenter","main","mainRaised","cartItemCount","matchCartItemArr","matchCartItem","map","find","mask","_id","undefined","idx","limitReached","quantity","imgContainer","url","img","tdNameAnchor","tdNameSmall","description","tdNumberSmall","buttonGroup","firstButton","lastButton","tooltip","actionButton","textRight","tdName","customFont","tdNumber","tdNumberAndButtonGroup"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React, {useContext} from \"react\";\nimport AuthContext from '../AuthContext'\nimport {Link} from 'react-router-dom'\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\n// @material-ui/icons\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport Close from \"@material-ui/icons/Close\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport Add from \"@material-ui/icons/Add\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\n// core components\nimport Header from \"../Header/Header_Checkout.js\";\nimport HeaderLinks from \"../Header/HeaderLinks.js\";\nimport Parallax from \"../Parallax/Parallax.js\";\nimport Grid from '@material-ui/core/Grid';\nimport GridContainer from \"../Grid/GridContainer.js\";\nimport GridItem from \"../Grid/GridItem.js\";\n// import Footer from \"components/Footer/Footer.js\";\nimport CheckoutTable from \"../CheckoutTable/CheckoutTable.js\";\nimport Button from \"../CustomButtons/Button.js\";\nimport Card from \"../Card/Card.js\";\nimport CardBody from \"../Card/CardBody.js\";\nimport {totalPrice,totalItemPrice} from '../cart.utils'\nimport {withRouter} from 'react-router-dom'\nimport shoppingCartStyle from \"../assets/jss/material-kit-pro-react/views/shoppingCartStyle.js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport {fetchAllMasks,getPublicStripeKey} from '../actions'\nimport CheckoutForm from './CheckoutForm'\n\nconst useStyles = makeStyles(shoppingCartStyle);\n\nfunction ShoppingCartPage({history}) {\n  const {state,dispatch} = useContext(AuthContext)\n  const {allMasks,cartItems} = state;\n  const stripePromise = getPublicStripeKey().then(key => {\n    console.log(\"key:\")\n    console.log(key)\n    return loadStripe(key)\n  });\n\n  React.useEffect(() => {\n    console.log(\"cartItems:\")\n    console.log(cartItems)\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n    fetchAllMasks(dispatch)\n  },[]);\n\n  const addItemToCart = (id,title,price) =>{\n    console.log(\"add item from cart\")\n    const item = {id,title,price};\n    dispatch({type:\"ADD_ITEM_TO_CART\",payload:item})\n    console.log(\"add item to cart in checkout being hit\")\n    if(sessionStorage.getItem(id)){\n      let existingNum = parseInt(sessionStorage.getItem(id));\n      console.log(\"existingNum exists\")\n      console.log(existingNum)\n      sessionStorage.setItem(`${id}`,existingNum + 1)\n    } else{console.log(\"no luck this time\")}\n}\n\nconst goBackToShopping = () =>{\n  history.push('/')\n}\n\nconst removeItemFromCart = (id,title,price) =>{\n  console.log(\"remove item from cart\")\n  const item = {id,title,price};\n  dispatch({type:\"REMOVE_ITEM_FROM_CART\",payload:item})\n  let myCachedTotal = JSON.parse(sessionStorage.getItem('cartTotal'))\n  console.log(\"myCachedTotal:\")\n  console.log(myCachedTotal)\n  if(myCachedTotal == 1){\n      console.log(\"Clear cart\")\n      sessionStorage.removeItem('cart');\n      sessionStorage.setItem('cartTotal',0)\n  }\n    let existingNum = parseInt(sessionStorage.getItem(id));\n    console.log(\"existingNum exists\")\n    console.log(existingNum)\n    sessionStorage.setItem(`${id}`,existingNum - 1)\n}\n\n  const handleClick = item =>{\n    let cartCount = JSON.parse(sessionStorage.getItem('cart'))\n    if(cartCount && cartCount.length == 1){\n        sessionStorage.removeItem('cart');\n        sessionStorage.setItem('cartTotal',0)\n    }else{\n        dispatch({type:\"CLEAR_CART\",payload:item})\n    }\n}\nconst classes = useStyles();\nlet sessionItems = JSON.parse(sessionStorage.getItem('cart'))\nif(!cartItems && !sessionItems) return (<div>loading checkout items</div>)\n\n  return (\n    <div>\n      <Parallax\n        image={require(\"../assets/img/bg3.jpg\")}\n        filter=\"dark\"\n        small\n      >\n        <div className={classes.container}>\n          <GridContainer>\n            <GridItem\n              md={8}\n              sm={8}\n              className={classNames(\n                classes.mlAuto,\n                classes.mrAuto,\n                classes.textCenter\n              )}\n            >\n              <h2 className={classes.title}>Your Cart</h2>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </Parallax>\n\n                    <div className={classNames(classes.main, classes.mainRaised)}>\n                      <div className={classes.container}>\n                        <Card plain>\n                          <CardBody plain>\n                            {/* <h3 className={classes.cardTitle}>Shopping Cart</h3> */}\n                            <Button color=\"info\" onClick={() => goBackToShopping()}>Back to Shopping</Button>\n                    {(() => {\n\n                    if(sessionItems && sessionItems.length > 0){\n                      \n                      let cartItemCount = JSON.parse(sessionStorage.getItem('cart'))\n                      let matchCartItemArr = [];\n                      let matchCartItem;\n                      \n                      sessionItems.map(item =>{\n                        matchCartItem = allMasks.find(mask => mask.id == item._id)\n                        if(matchCartItem !== undefined){\n                          matchCartItemArr.push(matchCartItem)\n                        }\n                      })\n                      return(\n                        \n                        sessionItems.map((item,idx) =>{\n                          const {id,title,price} = item;\n                          \n                          let limitReached;\n                          \n                          allMasks.map(mask =>{\n                            sessionItems.map(item =>{\n                              if(parseInt(sessionStorage.getItem(item.id)) == mask.quantity){\n                                limitReached = true\n                              } else{\n                                limitReached = false  \n                              }\n                            })\n                          })\n\n                        return(\n                                <CheckoutTable\n                                    key={id}\n                                    tableHead={[\n                                        \"\",\n                                        \"PRODUCT\",\n                                        \"COLOR\",\n                                        \"SIZE\",\n                                        \"PRICE\",\n                                        \"QTY\",\n                                        \"AMOUNT\",\n                                        \"\"\n                                      ]}\n                                    tableData={[\n                                      [  \n                                    <div className={classes.imgContainer} key={1}>\n                                    <img src={item.url} alt=\"...\" className={classes.img} />\n                                      </div>,\n                                        <span key={1}>\n                                        <a href=\"#jacket\" className={classes.tdNameAnchor}>\n                                          {item.title}\n                                        </a>\n                                        <br />\n                                        <small className={classes.tdNameSmall}>\n                                          {item.description}\n                                        </small>\n                                      </span>,\n                                      \"Red\",\n                                      \"M\",\n                                      <span key={1}>\n                                        <small className={classes.tdNumberSmall}>$</small> {item.price}\n                                      </span>,\n                                      <span key={1}>\n                                        {` `}\n                                        <div className={classes.buttonGroup}>\n                                          <Button\n                                            color=\"info\"\n                                            size=\"sm\"\n                                            round\n                                            className={classes.firstButton}\n                                            onClick={() => removeItemFromCart(id,title,price)}\n                                          >\n                                            <Remove />\n                                          </Button>\n                                          \n                          {cartItemCount[idx].quantity}\n                                                                    \n                                          <Button\n                                            color=\"info\"\n                                            size=\"sm\"\n                                            round\n                                            disabled={limitReached}\n                                            className={classes.lastButton}\n                                            onClick={() => addItemToCart(id,title,price)}\n                                          >\n                                            <Add />\n                                          </Button>\n                                        </div>\n                                      </span>,\n                                      <span key={1}>\n                                        <small className={classes.tdNumberSmall}>$</small> {totalItemPrice(item)}\n                                      </span>,\n                                      <Tooltip\n                                        key={1}\n                                        id=\"close1\"\n                                        title=\"Remove item\"\n                                        placement=\"left\"\n                                        classes={{ tooltip: classes.tooltip }}\n                                      >\n                                        <Button link className={classes.actionButton}>\n                                          <Close  onClick={() => handleClick(item)}/>\n                                        </Button>\n                                      </Tooltip>\n                                    ]   \n                                    ]}\n                                    tableShopping\n                                          customHeadCellClasses={[\n                                            classes.textCenter,\n                                            classes.description,\n                                            classes.description,\n                                            classes.textRight,\n                                            classes.textRight,\n                                            classes.textRight\n                                          ]}\n                                          customHeadClassesForCells={[0, 2, 3, 4, 5, 6]}\n                                          customCellClasses={[\n                                            classes.tdName,\n                                            classes.customFont,\n                                            classes.customFont,\n                                            classes.tdNumber,\n                                            classes.tdNumber + \" \" + classes.tdNumberAndButtonGroup,\n                                            classes.tdNumber + \" \" + classes.textCenter\n                                          ]}\n                                          customClassesForCells={[1, 2, 3, 4, 5, 6]}\n                                        />\n                                            )\n                                          })\n                                          // end of sessionItems map\n\n\n\n                                         )\n                                      }\n                                      // end of sessionItems length\n\n                                      else {return <span>No items left in this cart</span>}\n                                    })()\n                                    }\n                                      <Grid item xs={3}></Grid>\n                                      <Grid item xs={3}>\n                                        <Typography>Total</Typography>                        \n                                      </Grid>\n                                      <Grid item xs={3}>        \n                                          <span >\n                                            <small>$</small>{totalPrice(sessionItems||cartItems)}\n                                          </span>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                          </Grid>\n                                          <Grid item xs={6}>\n                                        <Elements stripe={stripePromise}>\n                                          <CheckoutForm price={totalPrice(sessionItems||cartItems)} />\n                                        </Elements>\n                                        </Grid>\n                                        <Grid item xs={3}>\n                                          </Grid>\n                                      </CardBody>\n                                    </Card>\n                                    </div>\n                                    </div>\n                            </div>)}\nexport default withRouter(ShoppingCartPage)"]},"metadata":{},"sourceType":"module"}