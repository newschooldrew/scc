{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/CheckoutTable/CheckoutTable.js\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport styles from \"../assets/jss/material-kit-pro-react/components/tableStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function CustomTable(props) {\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor,\n    hover,\n    colorsColls,\n    coloredColls,\n    customCellClasses,\n    customClassesForCells,\n    striped,\n    tableShopping,\n    customHeadCellClasses,\n    customHeadClassesForCells\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tableResponsive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, tableHead !== undefined ? /*#__PURE__*/React.createElement(TableHead, {\n    className: classes[tableHeaderColor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: classes.tableRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, tableHead.map((prop, key) => {\n    const tableCellClasses = classes.tableHeadCell + \" \" + classes.tableCell + \" \" + cx({\n      [customHeadCellClasses[customHeadClassesForCells.indexOf(key)]]: customHeadClassesForCells.indexOf(key) !== -1,\n      [classes.tableShoppingHead]: tableShopping\n    });\n    return /*#__PURE__*/React.createElement(TableCell, {\n      className: tableCellClasses,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, prop);\n  }))) : null, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, tableData.map((prop, key) => {\n    var rowColor = \"\";\n    var rowColored = false;\n\n    if (prop.color !== undefined) {\n      rowColor = prop.color;\n      rowColored = true;\n      prop = prop.data;\n    }\n\n    const tableRowClasses = cx({\n      [classes.tableRowHover]: hover,\n      [classes[rowColor + \"Row\"]]: rowColored,\n      [classes.tableStripedRow]: striped && key % 2 === 0\n    });\n\n    if (prop.total) {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: key,\n        hover: hover,\n        className: tableRowClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell,\n        colSpan: prop.colspan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, \"Total\"), /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellAmount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }, prop.amount), tableHead.length - (prop.colspan - 0 + 2) > 0 ? /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell,\n        colSpan: tableHead.length - (prop.colspan - 0 + 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }) : null);\n    }\n\n    if (prop.purchase) {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: key,\n        hover: hover,\n        className: tableRowClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell,\n        colSpan: prop.colspan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, \"Total\"), /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.tableCellAmount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, prop.amount), /*#__PURE__*/React.createElement(TableCell, {\n        className: classes.tableCell + \" \" + classes.right,\n        colSpan: prop.col.colspan,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }, prop.col.text));\n    }\n\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: key,\n      hover: hover,\n      className: classes.tableRow + \" \" + tableRowClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, prop.map((prop, key) => {\n      const tableCellClasses = classes.tableCell + \" \" + cx({\n        [classes[colorsColls[coloredColls.indexOf(key)]]]: coloredColls.indexOf(key) !== -1,\n        [customCellClasses[customClassesForCells.indexOf(key)]]: customClassesForCells.indexOf(key) !== -1\n      });\n      return /*#__PURE__*/React.createElement(TableCell, {\n        className: tableCellClasses,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, prop);\n    }));\n  }))));\n}\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\",\n  hover: false,\n  colorsColls: [],\n  coloredColls: [],\n  striped: false,\n  customCellClasses: [],\n  customClassesForCells: [],\n  customHeadCellClasses: [],\n  customHeadClassesForCells: []\n};\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  // Of(PropTypes.arrayOf(PropTypes.node)) || Of(PropTypes.object),\n  tableData: PropTypes.array,\n  hover: PropTypes.bool,\n  coloredColls: PropTypes.arrayOf(PropTypes.number),\n  // Of([\"warning\",\"primary\",\"danger\",\"success\",\"info\",\"rose\",\"gray\"]) - colorsColls\n  colorsColls: PropTypes.array,\n  customCellClasses: PropTypes.arrayOf(PropTypes.string),\n  customClassesForCells: PropTypes.arrayOf(PropTypes.number),\n  customHeadCellClasses: PropTypes.arrayOf(PropTypes.string),\n  customHeadClassesForCells: PropTypes.arrayOf(PropTypes.number),\n  striped: PropTypes.bool,\n  // this will cause some changes in font\n  tableShopping: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/CheckoutTable/CheckoutTable.js"],"names":["React","cx","PropTypes","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","styles","useStyles","CustomTable","props","tableHead","tableData","tableHeaderColor","hover","colorsColls","coloredColls","customCellClasses","customClassesForCells","striped","tableShopping","customHeadCellClasses","customHeadClassesForCells","classes","tableResponsive","table","undefined","tableRow","map","prop","key","tableCellClasses","tableHeadCell","tableCell","indexOf","tableShoppingHead","rowColor","rowColored","color","data","tableRowClasses","tableRowHover","tableStripedRow","total","colspan","tableCellTotal","tableCellAmount","amount","length","purchase","right","col","text","defaultProps","propTypes","oneOf","arrayOf","string","array","bool","number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport styles from \"../assets/jss/material-kit-pro-react/components/tableStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CustomTable(props) {\n  const {\n    tableHead,\n    tableData,\n    tableHeaderColor,\n    hover,\n    colorsColls,\n    coloredColls,\n    customCellClasses,\n    customClassesForCells,\n    striped,\n    tableShopping,\n    customHeadCellClasses,\n    customHeadClassesForCells\n  } = props;\n  const classes = useStyles();\n  return (\n    <div className={classes.tableResponsive}>\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor]}>\n            <TableRow className={classes.tableRow}>\n              {tableHead.map((prop, key) => {\n                const tableCellClasses =\n                  classes.tableHeadCell +\n                  \" \" +\n                  classes.tableCell +\n                  \" \" +\n                  cx({\n                    [customHeadCellClasses[\n                      customHeadClassesForCells.indexOf(key)\n                    ]]: customHeadClassesForCells.indexOf(key) !== -1,\n                    [classes.tableShoppingHead]: tableShopping\n                  });\n                return (\n                  <TableCell className={tableCellClasses} key={key}>\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tableData.map((prop, key) => {\n            var rowColor = \"\";\n            var rowColored = false;\n            if (prop.color !== undefined) {\n              rowColor = prop.color;\n              rowColored = true;\n              prop = prop.data;\n            }\n            const tableRowClasses = cx({\n              [classes.tableRowHover]: hover,\n              [classes[rowColor + \"Row\"]]: rowColored,\n              [classes.tableStripedRow]: striped && key % 2 === 0\n            });\n            if (prop.total) {\n              return (\n                <TableRow key={key} hover={hover} className={tableRowClasses}>\n                  <TableCell\n                    className={classes.tableCell}\n                    colSpan={prop.colspan}\n                  />\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableCellTotal}\n                  >\n                    Total\n                  </TableCell>\n                  <TableCell\n                    className={\n                      classes.tableCell + \" \" + classes.tableCellAmount\n                    }\n                  >\n                    {prop.amount}\n                  </TableCell>\n                  {tableHead.length - (prop.colspan - 0 + 2) > 0 ? (\n                    <TableCell\n                      className={classes.tableCell}\n                      colSpan={tableHead.length - (prop.colspan - 0 + 2)}\n                    />\n                  ) : null}\n                </TableRow>\n              );\n            }\n            if (prop.purchase) {\n              return (\n                <TableRow key={key} hover={hover} className={tableRowClasses}>\n                  <TableCell\n                    className={classes.tableCell}\n                    colSpan={prop.colspan}\n                  />\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableCellTotal}\n                  >\n                    Total\n                  </TableCell>\n                  <TableCell\n                    className={\n                      classes.tableCell + \" \" + classes.tableCellAmount\n                    }\n                  >\n                    {prop.amount}\n                  </TableCell>\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.right}\n                    colSpan={prop.col.colspan}\n                  >\n                    {prop.col.text}\n                  </TableCell>\n                </TableRow>\n              );\n            }\n            return (\n              <TableRow\n                key={key}\n                hover={hover}\n                className={classes.tableRow + \" \" + tableRowClasses}\n              >\n                {prop.map((prop, key) => {\n                  const tableCellClasses =\n                    classes.tableCell +\n                    \" \" +\n                    cx({\n                      [classes[colorsColls[coloredColls.indexOf(key)]]]:\n                        coloredColls.indexOf(key) !== -1,\n                      [customCellClasses[customClassesForCells.indexOf(key)]]:\n                        customClassesForCells.indexOf(key) !== -1\n                    });\n                  return (\n                    <TableCell className={tableCellClasses} key={key}>\n                      {prop}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nCustomTable.defaultProps = {\n  tableHeaderColor: \"gray\",\n  hover: false,\n  colorsColls: [],\n  coloredColls: [],\n  striped: false,\n  customCellClasses: [],\n  customClassesForCells: [],\n  customHeadCellClasses: [],\n  customHeadClassesForCells: []\n};\n\nCustomTable.propTypes = {\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  // Of(PropTypes.arrayOf(PropTypes.node)) || Of(PropTypes.object),\n  tableData: PropTypes.array,\n  hover: PropTypes.bool,\n  coloredColls: PropTypes.arrayOf(PropTypes.number),\n  // Of([\"warning\",\"primary\",\"danger\",\"success\",\"info\",\"rose\",\"gray\"]) - colorsColls\n  colorsColls: PropTypes.array,\n  customCellClasses: PropTypes.arrayOf(PropTypes.string),\n  customClassesForCells: PropTypes.arrayOf(PropTypes.number),\n  customHeadCellClasses: PropTypes.arrayOf(PropTypes.string),\n  customHeadClassesForCells: PropTypes.arrayOf(PropTypes.number),\n  striped: PropTypes.bool,\n  // this will cause some changes in font\n  tableShopping: PropTypes.bool\n};"]},"metadata":{},"sourceType":"module"}