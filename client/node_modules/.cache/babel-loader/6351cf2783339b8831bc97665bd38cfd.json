{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/Header.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from './AuthContext';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'; // import CartDropdown from '../CartDropdown/CartDropdown'\n// import { useToasts } from 'react-toast-notifications'\n\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst Header = ({\n  history\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username,\n    cartItems,\n    toggleCart,\n    alerts,\n    fetchedOrderFromAlert\n  } = state; // const { addToast } = useToasts()\n\n  let cartAlerts = JSON.parse(sessionStorage.getItem('orderNotification'));\n  let cartItemCount = sessionStorage.getItem('cartTotal');\n  let orderCountItems = sessionStorage.getItem('orderCount');\n  let sessionCartItems = JSON.parse(sessionStorage.getItem('cart'));\n  let newTotal;\n\n  const getData = item => {\n    if (username == \"alert_tester\") {\n      sessionStorage.setItem('orderCount', item.length);\n      dispatch({\n        type: \"SET_ORDER_COUNT\",\n        payload: item.length\n      });\n    }\n  };\n\n  const handleCartClick = () => {\n    dispatch({\n      type: \"TOGGLE_CART\",\n      payload: toggleCart\n    });\n  };\n\n  const headerStyle = {\n    width: '100%'\n  };\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    grow: {\n      flexGrow: 1,\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    icon: {\n      color: \"green\",\n      fontSize: 45\n    },\n    mobile: {\n      display: \"none\"\n    },\n    picture: {\n      height: \"50px\",\n      borderRadius: \"90%\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    alertStyle: {\n      backgroundColor: 'red',\n      width: '5%',\n      borderRadius: '55px',\n      textAlign: 'center'\n    }\n  }));\n  const clickable = {\n    cursor: 'pointer',\n    margin: '0 25px 0 0'\n  }; // if(cartItems.length > 0){\n  //     try{\n  //         sessionStorage.setItem('cart',JSON.stringify(cartItems))\n  //     newTotal = cartItems.reduce((acc,cartItem) => acc + cartItem.quantity,0)\n  //     sessionStorage.setItem('cartTotal',newTotal)\n  //     } catch(e){\n  //         console.log(\"cartItems is empty\")\n  //     }\n  // }\n\n  const classes = useStyles();\n\n  const showNotification = () => {// addToast('An order was created', { appearance: 'success' }, () => console.log(\"toast shown\"))\n  };\n\n  const showAlerts = () => {// dispatch({type:\"TOGGLE_ALERT_DROPDOWN\",payload:!toggleAlertDropDown})\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: headerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => history.push('/'),\n    style: clickable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://res.cloudinary.com/dzdvrgbjd/image/upload/v1599961709/CAAEYC_SouthernCalifornia_satellite_wide_tcqkpt.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 70\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.alertStyle,\n    onClick: showAlerts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, orderCountItems), /*#__PURE__*/React.createElement(Button, {\n    edge: \"start\",\n    onClick: handleCartClick,\n    className: classes.menuButton,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }), \"Cart Items: \", cartItemCount))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/Header.js"],"names":["React","useState","useContext","useEffect","AuthContext","AppBar","withRouter","makeStyles","Toolbar","Typography","Button","ShoppingCartIcon","HomeIcon","Header","history","state","dispatch","username","cartItems","toggleCart","alerts","fetchedOrderFromAlert","cartAlerts","JSON","parse","sessionStorage","getItem","cartItemCount","orderCountItems","sessionCartItems","newTotal","getData","item","setItem","length","type","payload","handleCartClick","headerStyle","width","useStyles","theme","root","flexGrow","grow","display","alignItems","icon","color","fontSize","mobile","picture","height","borderRadius","menuButton","marginRight","spacing","title","alertStyle","backgroundColor","textAlign","clickable","cursor","margin","classes","showNotification","showAlerts","push"],"mappings":"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","sourcesContent":["import React,{useState,useContext,useEffect} from 'react'\nimport AuthContext from './AuthContext'\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {withRouter} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n// import CartDropdown from '../CartDropdown/CartDropdown'\n// import { useToasts } from 'react-toast-notifications'\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst Header = ({history}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {username,cartItems,toggleCart,alerts,fetchedOrderFromAlert} = state;\n    // const { addToast } = useToasts()\n    let cartAlerts = JSON.parse(sessionStorage.getItem('orderNotification'))\n    let cartItemCount = sessionStorage.getItem('cartTotal')\n    let orderCountItems = sessionStorage.getItem('orderCount')\n    let sessionCartItems = JSON.parse(sessionStorage.getItem('cart'))\n    let newTotal;\n\n    const getData = item => {\n        if(username == \"alert_tester\"){\n            sessionStorage.setItem('orderCount',item.length)\n            dispatch({type:\"SET_ORDER_COUNT\",payload:item.length})\n        }\n      };\n\nconst handleCartClick = () =>{\n    dispatch({type:\"TOGGLE_CART\",payload:toggleCart})\n}\n\nconst headerStyle = {\n    width:'100%'\n}\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n          flexGrow: 1\n        },\n        grow: {\n          flexGrow: 1,\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        icon: {\n          color: \"green\",\n          fontSize: 45\n        },\n        mobile: {\n          display: \"none\"\n        },\n        picture: {\n          height: \"50px\",\n          borderRadius: \"90%\"\n        },\n        menuButton: {\n          marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n          },\n        alertStyle:{\n            backgroundColor:'red',\n            width:'5%',\n            borderRadius:'55px',\n            textAlign:'center'\n        }\n      })\n    );\n\n    const clickable = {\n        cursor:'pointer',\n        margin: '0 25px 0 0'\n    }\n\n    // if(cartItems.length > 0){\n    //     try{\n    //         sessionStorage.setItem('cart',JSON.stringify(cartItems))\n    //     newTotal = cartItems.reduce((acc,cartItem) => acc + cartItem.quantity,0)\n    //     sessionStorage.setItem('cartTotal',newTotal)\n    //     } catch(e){\n    //         console.log(\"cartItems is empty\")\n    //     }\n    // }\n      \n    const classes = useStyles();\n    \n    const showNotification = () =>{\n        // addToast('An order was created', { appearance: 'success' }, () => console.log(\"toast shown\"))\n    }\n\n    const showAlerts = () =>{\n        // dispatch({type:\"TOGGLE_ALERT_DROPDOWN\",payload:!toggleAlertDropDown})\n    }\n\n    return (\n        <div className={classes.root}>\n         <AppBar position=\"fixed\">\n         <Toolbar>\n                \n                <>\n                <div style={headerStyle}>\n             <a  onClick={() => history.push('/')} style={clickable}><img src=\"https://res.cloudinary.com/dzdvrgbjd/image/upload/v1599961709/CAAEYC_SouthernCalifornia_satellite_wide_tcqkpt.png\" /></a>\n                    \n                    <div className={classes.alertStyle} onClick={showAlerts}>{orderCountItems}</div>\n                    <Button edge=\"start\" onClick={handleCartClick} className={classes.menuButton} color=\"inherit\">\n                        <ShoppingCartIcon />\n                        Cart Items: {cartItemCount}\n                    </Button>\n                    {/* {toggleCart ? (<CartDropdown cartItems={sessionCartItems} />):null} */}\n                    </div>  \n                    </>\n                \n            </Toolbar>\n        </AppBar>\n    </div>\n    )        \n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}