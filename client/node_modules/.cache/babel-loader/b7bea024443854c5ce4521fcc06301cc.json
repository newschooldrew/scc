{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/Header.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../AuthContext';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { signOut, fetchAlerts } from '../../actions';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport CartDropdown from '../CartDropdown/CartDropdown';\nimport AlertDropdown from '../AlertDropdown/AlertDropdown';\nimport NotifyMe from 'react-notification-timeline';\nimport { useToasts } from 'react-toast-notifications';\nimport io from \"socket.io-client\";\nimport HomeIcon from '@material-ui/icons/Home';\nlet socket = io('http://localhost:5001');\n\nconst HeaderToBeWrapped = ({\n  history\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    username,\n    cartItems,\n    toggleCart,\n    toggleAlertDropDown,\n    alerts,\n    fetchedOrderFromAlert\n  } = state;\n  const {\n    addToast\n  } = useToasts();\n  let cartAlerts = JSON.parse(sessionStorage.getItem('orderNotification'));\n  let cartItemCount = sessionStorage.getItem('cartTotal');\n  let orderCountItems = sessionStorage.getItem('orderCount');\n  let sessionCartItems = JSON.parse(sessionStorage.getItem('cart'));\n  let newTotal;\n\n  const getData = item => {\n    if (username == \"alert_tester\") {\n      sessionStorage.setItem('orderCount', item.length);\n      dispatch({\n        type: \"SET_ORDER_COUNT\",\n        payload: item.length\n      });\n    }\n  };\n\n  const handleCartClick = () => {\n    dispatch({\n      type: \"TOGGLE_CART\",\n      payload: toggleCart\n    });\n  };\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    grow: {\n      flexGrow: 1,\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    icon: {\n      color: \"green\",\n      fontSize: 45\n    },\n    mobile: {\n      display: \"none\"\n    },\n    picture: {\n      height: \"50px\",\n      borderRadius: \"90%\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    },\n    alertStyle: {\n      backgroundColor: 'red',\n      width: '5%',\n      borderRadius: '55px',\n      textAlign: 'center'\n    }\n  }));\n  const clickable = {\n    cursor: 'pointer',\n    margin: '0 25px 0 0'\n  };\n\n  if (cartItems.length > 0) {\n    try {\n      sessionStorage.setItem('cart', JSON.stringify(cartItems));\n      newTotal = cartItems.reduce((acc, cartItem) => acc + cartItem.quantity, 0);\n      sessionStorage.setItem('cartTotal', newTotal);\n    } catch (e) {\n      console.log(\"cartItems is empty\");\n    }\n  }\n\n  const classes = useStyles();\n\n  const showNotification = () => {\n    addToast('An order was created', {\n      appearance: 'success'\n    }, () => console.log(\"toast shown\"));\n  };\n\n  const showAlerts = () => {\n    fetchAlerts(dispatch);\n    dispatch({\n      type: \"TOGGLE_ALERT_DROPDOWN\",\n      payload: !toggleAlertDropDown\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    onClick: () => history.push('/'),\n    style: clickable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 14\n    }\n  }), username ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Hello, \", username), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.alertStyle,\n    onClick: showAlerts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, orderCountItems), toggleAlertDropDown ? /*#__PURE__*/React.createElement(AlertDropdown, {\n    alerts: alerts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 45\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    edge: \"start\",\n    onClick: handleCartClick,\n    className: classes.menuButton,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }), \"Cart Items: \", cartItemCount), toggleCart ? /*#__PURE__*/React.createElement(CartDropdown, {\n    cartItems: sessionCartItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 36\n    }\n  }) : null, /*#__PURE__*/React.createElement(Button, {\n    color: \"inherit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Sign Out\")) : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"Please log in\"))));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/Header.js"],"names":["React","useState","useContext","useEffect","AuthContext","AppBar","signOut","fetchAlerts","withRouter","makeStyles","Toolbar","Typography","Button","ShoppingCartIcon","CartDropdown","AlertDropdown","NotifyMe","useToasts","io","HomeIcon","socket","HeaderToBeWrapped","history","state","dispatch","username","cartItems","toggleCart","toggleAlertDropDown","alerts","fetchedOrderFromAlert","addToast","cartAlerts","JSON","parse","sessionStorage","getItem","cartItemCount","orderCountItems","sessionCartItems","newTotal","getData","item","setItem","length","type","payload","handleCartClick","useStyles","theme","root","flexGrow","grow","display","alignItems","icon","color","fontSize","mobile","picture","height","borderRadius","menuButton","marginRight","spacing","title","alertStyle","backgroundColor","width","textAlign","clickable","cursor","margin","stringify","reduce","acc","cartItem","quantity","e","console","log","classes","showNotification","appearance","showAlerts","push","handleSubmit","Header"],"mappings":"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","sourcesContent":["import React,{useState,useContext,useEffect} from 'react'\nimport AuthContext from '../../AuthContext'\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {signOut,fetchAlerts} from '../../actions'\nimport {withRouter} from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport CartDropdown from '../CartDropdown/CartDropdown'\nimport AlertDropdown from '../AlertDropdown/AlertDropdown'\nimport NotifyMe from 'react-notification-timeline';\nimport { useToasts } from 'react-toast-notifications'\nimport io from \"socket.io-client\";\nimport HomeIcon from '@material-ui/icons/Home';\n\nlet socket = io('http://localhost:5001');\n\nconst HeaderToBeWrapped = ({history}) => {\n    const {state,dispatch} = useContext(AuthContext)\n    const {username,cartItems,toggleCart,toggleAlertDropDown,alerts,fetchedOrderFromAlert} = state;\n    const { addToast } = useToasts()\n    let cartAlerts = JSON.parse(sessionStorage.getItem('orderNotification'))\n    let cartItemCount = sessionStorage.getItem('cartTotal')\n    let orderCountItems = sessionStorage.getItem('orderCount')\n    let sessionCartItems = JSON.parse(sessionStorage.getItem('cart'))\n    let newTotal;\n\n    const getData = item => {\n        if(username == \"alert_tester\"){\n            sessionStorage.setItem('orderCount',item.length)\n            dispatch({type:\"SET_ORDER_COUNT\",payload:item.length})\n        }\n      };\n\nconst handleCartClick = () =>{\n    dispatch({type:\"TOGGLE_CART\",payload:toggleCart})\n}\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n          flexGrow: 1\n        },\n        grow: {\n          flexGrow: 1,\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        icon: {\n          color: \"green\",\n          fontSize: 45\n        },\n        mobile: {\n          display: \"none\"\n        },\n        picture: {\n          height: \"50px\",\n          borderRadius: \"90%\"\n        },\n        menuButton: {\n          marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n          },\n        alertStyle:{\n            backgroundColor:'red',\n            width:'5%',\n            borderRadius:'55px',\n            textAlign:'center'\n        }\n      })\n    );\n\n    const clickable = {\n        cursor:'pointer',\n        margin: '0 25px 0 0'\n    }\n\n    if(cartItems.length > 0){\n        try{\n            sessionStorage.setItem('cart',JSON.stringify(cartItems))\n        newTotal = cartItems.reduce((acc,cartItem) => acc + cartItem.quantity,0)\n        sessionStorage.setItem('cartTotal',newTotal)\n        } catch(e){\n            console.log(\"cartItems is empty\")\n        }\n    }\n      \n    const classes = useStyles();\n    \n    const showNotification = () =>{\n        addToast('An order was created', { appearance: 'success' }, () => console.log(\"toast shown\"))\n    }\n\n    const showAlerts = () =>{\n        fetchAlerts(dispatch)\n        dispatch({type:\"TOGGLE_ALERT_DROPDOWN\",payload:!toggleAlertDropDown})\n    }\n\n    return (\n        <div className={classes.root}>\n         <AppBar position=\"fixed\">\n         <Toolbar>\n             <HomeIcon onClick={() => history.push('/')} style={clickable}/>\n                {username ?\n                <>  \n                        <Typography className={classes.title}>\n                            Hello, {username}\n                        </Typography>\n                    \n                    <div className={classes.alertStyle} onClick={showAlerts}>{orderCountItems}</div>\n                    {toggleAlertDropDown ? (<AlertDropdown alerts={alerts}/>): null}\n                    <Button edge=\"start\" onClick={handleCartClick} className={classes.menuButton} color=\"inherit\">\n                        <ShoppingCartIcon />\n                        Cart Items: {cartItemCount}\n                    </Button>\n                    {toggleCart ? (<CartDropdown cartItems={sessionCartItems} />):null}\n                        <Button color=\"inherit\" onClick={handleSubmit}>\n                            Sign Out\n                        </Button>\n                    </>\n                : <Typography className={classes.title}>Please log in</Typography>}\n            </Toolbar>\n        </AppBar>\n    </div>\n    )        \n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}