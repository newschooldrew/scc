{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/Checkout/CheckoutForm.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from '../AuthContext';\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { createPaymentIntent, createOrder, getProductDetails } from '../actions';\nimport { withRouter } from 'react-router-dom';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst CheckoutForm = ({\n  price,\n  history\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const {\n    cartItems\n  } = state;\n  const [clientSecret, setClientSecret] = useState(null);\n  const [error, setError] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [actualName, setActualName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [province, setProvince] = useState('');\n  const [postal_code, setPostalCode] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  let cartTotal = JSON.parse(sessionStorage.getItem('cart'));\n  useEffect(() => {\n    const item = {\n      actualName,\n      address,\n      city,\n      province,\n      postal_code,\n      price,\n      cartTotal\n    };\n    createPaymentIntent(item).then(clientSecret => {\n      console.log(\"clientSecret:\");\n      console.log(clientSecret.client_secret);\n      setClientSecret(clientSecret.client_secret);\n      console.log(\"clientSecret:\");\n      console.log(clientSecret);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, []);\n\n  const handleSubmit = async ev => {\n    console.log(clientSecret);\n    ev.preventDefault();\n    setProcessing(true);\n    removeItemFromInventory(cartTotal);\n    const item = {\n      actualName,\n      address,\n      city,\n      province,\n      postal_code,\n      price,\n      cartTotal\n    };\n    createPaymentIntent(item).then(clientSecret => {\n      console.log(\"clientSecret:\");\n      console.log(clientSecret.client_secret);\n      setClientSecret(clientSecret.client_secret);\n      console.log(\"clientSecret:\");\n      console.log(clientSecret);\n    }).catch(err => {\n      setError(err.message);\n    }); // Step 3: Use clientSecret from PaymentIntent and the CardElement\n    // to confirm payment with stripe.confirmCardPayment()\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: ev.target.name.value\n        }\n      }\n    });\n    console.log(\"payload:\");\n    console.log(payload);\n\n    if (payload.error) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n      console.log(\"[error]\", payload.error);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setMetadata(payload.paymentIntent);\n      console.log(\"[PaymentIntent]\", payload.paymentIntent);\n    }\n\n    createOrder(item);\n    history.push('/receipt');\n  };\n\n  const renderSuccess = () => {\n    const item = {\n      actualName,\n      address,\n      city,\n      province,\n      postal_code,\n      price,\n      cartTotal\n    };\n  };\n\n  const renderForm = () => {\n    const options = {\n      style: {\n        base: {\n          color: \"#32325d\",\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSmoothing: \"antialiased\",\n          fontSize: \"16px\",\n          \"::placeholder\": {\n            color: \"#aab7c4\"\n          }\n        },\n        invalid: {\n          color: \"#fa755a\",\n          iconColor: \"#fa755a\"\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sr-combo-inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sr-combo-inputs-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      placeholder: \"Name\",\n      autoComplete: \"cardholder\",\n      className: \"sr-input\",\n      onChange: e => setActualName(e.target.value),\n      value: actualName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lastName\",\n      name: \"lastName\",\n      placeholder: \"Last name\",\n      className: \"sr-input\" // onChange={e => setAddress(e.target.value)}\n      ,\n      value: address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"address\",\n      name: \"Address\",\n      placeholder: \"Address\",\n      className: \"sr-input\",\n      onChange: e => setAddress(e.target.value),\n      value: address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"city\",\n      name: \"City\",\n      placeholder: \"City\",\n      className: \"sr-input\",\n      onChange: e => setCity(e.target.value),\n      value: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"province\",\n      name: \"province\",\n      placeholder: \"State\",\n      className: \"sr-input\",\n      onChange: e => setProvince(e.target.value),\n      value: province,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"postal_code\",\n      name: \"postal_code\",\n      placeholder: \"Postal Code\",\n      className: \"sr-input\",\n      onChange: e => setPostalCode(e.target.value),\n      value: postal_code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sr-combo-inputs-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardElement, {\n      className: \"sr-input sr-card-element\",\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    })))), error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message sr-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }, error), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, processing ? \"Processing…\" : \"Pay\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sr-payment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sr-form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }), renderForm()));\n};\n\nexport default withRouter(CheckoutForm);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/Checkout/CheckoutForm.js"],"names":["React","useContext","useEffect","useState","AuthContext","CardElement","useStripe","useElements","createPaymentIntent","createOrder","getProductDetails","withRouter","Col","Row","Button","Form","FormGroup","Label","Input","CheckoutForm","price","history","state","dispatch","cartItems","clientSecret","setClientSecret","error","setError","metadata","setMetadata","succeeded","setSucceeded","processing","setProcessing","actualName","setActualName","address","setAddress","city","setCity","province","setProvince","postal_code","setPostalCode","stripe","elements","cartTotal","JSON","parse","sessionStorage","getItem","item","then","console","log","client_secret","catch","err","message","handleSubmit","ev","preventDefault","removeItemFromInventory","payload","confirmCardPayment","payment_method","card","getElement","billing_details","name","target","value","paymentIntent","push","renderSuccess","renderForm","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","e"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState } from \"react\";\nimport AuthContext from '../AuthContext'\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport {createPaymentIntent,createOrder,getProductDetails} from '../actions'\nimport {withRouter} from 'react-router-dom'\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst CheckoutForm = ({price,history}) => {\n  const {state,dispatch} = useContext(AuthContext)\n  const {cartItems} = state;\n  const [clientSecret, setClientSecret] = useState(null);\n  const [error, setError] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [actualName,setActualName] = useState('')\n  const [address,setAddress] = useState('')\n  const [city,setCity] = useState('')\n  const [province,setProvince] = useState('')\n  const [postal_code,setPostalCode] = useState('')\n  const stripe = useStripe();\n  const elements = useElements();\n\n  let cartTotal = JSON.parse(sessionStorage.getItem('cart'))\n\n  useEffect(() => {\n    const item = {actualName,address,city,province,postal_code,price,cartTotal}\n      createPaymentIntent(item)\n      .then((clientSecret) => {\n          console.log(\"clientSecret:\")\n          console.log(clientSecret.client_secret)\n          setClientSecret(clientSecret.client_secret)\n        console.log(\"clientSecret:\")\n        console.log(clientSecret)\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  }, []);\n  \n  const handleSubmit = async (ev) => {\n      console.log(clientSecret)\n    ev.preventDefault();\n    setProcessing(true);\n    removeItemFromInventory(cartTotal)\n    const item = {actualName,address,city,province,postal_code,price,cartTotal}\n\n    createPaymentIntent(item)\n    .then((clientSecret) => {\n        console.log(\"clientSecret:\")\n        console.log(clientSecret.client_secret)\n        setClientSecret(clientSecret.client_secret)\n      console.log(\"clientSecret:\")\n      console.log(clientSecret)\n    })\n    .catch((err) => {\n      setError(err.message);\n    });\n\n    // Step 3: Use clientSecret from PaymentIntent and the CardElement\n    // to confirm payment with stripe.confirmCardPayment()\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: ev.target.name.value,\n        },\n      },\n    });\n\n    console.log(\"payload:\")\n    console.log(payload)\n\n    if (payload.error) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n      console.log(\"[error]\", payload.error);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setMetadata(payload.paymentIntent);\n      console.log(\"[PaymentIntent]\", payload.paymentIntent)\n    }\n    createOrder(item)\n    history.push('/receipt')\n  };\n\n  const renderSuccess = () => {\n    const item = {actualName,address,city,province,postal_code,price,cartTotal}\n  };\n\n  const renderForm = () => {\n    const options = {\n      style: {\n        base: {\n          color: \"#32325d\",\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSmoothing: \"antialiased\",\n          fontSize: \"16px\",\n          \"::placeholder\": {\n            color: \"#aab7c4\",\n          },\n        },\n        invalid: {\n          color: \"#fa755a\",\n          iconColor: \"#fa755a\",\n        },\n      },\n    };\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <div className=\"sr-combo-inputs\">\n          <div className=\"sr-combo-inputs-row\">\n          <FormGroup>\n          <Row >\n            <Col md={3}>\n                <FormGroup>\n                <Label for=\"name\">Name</Label>\n                            <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            autoComplete=\"cardholder\"\n                            className=\"sr-input\"\n                            onChange={e => setActualName(e.target.value)}\n                            value={actualName}\n                            />\n                </FormGroup>\n                </Col>\n\n                <Col md={3}>\n                    <FormGroup>\n                    <Label for=\"address\">Last Name</Label>\n                        <input\n                        type=\"text\"\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        placeholder=\"Last name\"\n                        className=\"sr-input\"\n                        // onChange={e => setAddress(e.target.value)}\n                        value={address}\n                        />\n                    </FormGroup>\n                </Col>\n            </Row>\n            \n            <Row>\n            <Col md={3}>\n            <FormGroup>\n            <Label for=\"address\">Address</Label>\n                        <input\n                        type=\"text\"\n                        id=\"address\"\n                        name=\"Address\"\n                        placeholder=\"Address\"\n                        className=\"sr-input\"\n                        onChange={e => setAddress(e.target.value)}\n                        value={address}\n                        />\n            </FormGroup>\n            </Col>\n            <Col md={3}>\n            <FormGroup>\n            <Label for=\"address\">City</Label>\n            <input\n              type=\"text\"\n              id=\"city\"\n              name=\"City\"\n              placeholder=\"City\"\n              className=\"sr-input\"\n              onChange={e => setCity(e.target.value)}\n              value={city}\n              />\n            </FormGroup>\n            </Col>\n        </Row>\n        <Row>\n        <Col md={3}>\n          <FormGroup>\n          <Label for=\"address\">State</Label>\n              <input\n              type=\"text\"\n              id=\"province\"\n              name=\"province\"\n              placeholder=\"State\"\n              className=\"sr-input\"\n              onChange={e => setProvince(e.target.value)}\n              value={province}\n              />\n          </FormGroup>\n        </Col>\n\n        <Col md={3}>\n          <FormGroup>\n          <Label for=\"address\">Postal Code</Label>\n              <input\n              type=\"text\"\n              id=\"postal_code\"\n              name=\"postal_code\"\n              placeholder=\"Postal Code\"\n              className=\"sr-input\"\n              onChange={e => setPostalCode(e.target.value)}\n              value={postal_code}\n              />\n          </FormGroup>\n        </Col>\n    </Row>\n          <div className=\"sr-combo-inputs-row\">\n            <CardElement\n              className=\"sr-input sr-card-element\"\n              options={options}\n              />\n              </div>\n              </FormGroup>\n              </div>\n\n        {error && <div className=\"message sr-field-error\">{error}</div>}\n\n        <button\n          className=\"btn\"\n          >\n            {processing ? \"Processing…\" : \"Pay\"}\n        </button>\n          </div>\n      </form>\n    );\n  };\n\n  return (\n    <div className=\"checkout-form\">\n      <div className=\"sr-payment-form\">\n        <div className=\"sr-form-row\" />\n        {renderForm()}\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(CheckoutForm)"]},"metadata":{},"sourceType":"module"}