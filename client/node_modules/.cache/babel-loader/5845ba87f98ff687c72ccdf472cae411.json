{"ast":null,"code":"var _jsxFileName = \"/Users/andrewperez/Documents/projects/scc/client/src/Checkout/CheckoutForm.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport AuthContext from '../AuthContext';\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { createPaymentIntent, createOrder } from '../actions';\nimport { withRouter } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport './CheckoutForm.scss';\n\nconst CheckoutForm = ({\n  price,\n  history\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(AuthContext);\n  const [clientSecret, setClientSecret] = useState(null);\n  const [error, setError] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [actualName, setActualName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [province, setProvince] = useState('');\n  const [postal_code, setPostalCode] = useState('');\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  let cartTotal = JSON.parse(sessionStorage.getItem('cart'));\n  useEffect(() => {\n    const item = {\n      actualName,\n      address,\n      city,\n      province,\n      postal_code,\n      email,\n      price,\n      cartTotal\n    };\n    createPaymentIntent(item).then(clientSecret => {\n      console.log(\"clientSecret:\");\n      console.log(clientSecret.client_secret);\n      setClientSecret(clientSecret.client_secret);\n      console.log(\"clientSecret:\");\n      console.log(clientSecret);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, []);\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const item = {\n      actualName,\n      lastName,\n      address,\n      city,\n      province,\n      postal_code,\n      email,\n      price,\n      cartTotal\n    };\n    createPaymentIntent(item).then(clientSecret => {\n      setClientSecret(clientSecret.client_secret);\n    }).catch(err => {\n      setError(err.message);\n    }); // Step 3: Use clientSecret from PaymentIntent and the CardElement\n    // to confirm payment with stripe.confirmCardPayment()\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: ev.target.name.value\n        }\n      }\n    });\n    console.log(\"payload:\");\n    console.log(payload);\n\n    if (payload.error || !payload) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n      console.log(\"[error]\", payload.error);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setMetadata(payload.paymentIntent);\n      console.log(\"[PaymentIntent]\", payload.paymentIntent);\n      dispatch({\n        type: \"CREATE_ORDER\",\n        payload: item\n      });\n      createOrder(item, dispatch);\n      history.push('/receipt');\n    }\n  };\n\n  const renderForm = () => {\n    const options = {\n      style: {\n        base: {\n          color: \"#32325d\",\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSmoothing: \"antialiased\",\n          fontSize: \"16px\",\n          \"::placeholder\": {\n            color: \"#aab7c4\"\n          }\n        },\n        invalid: {\n          color: \"#fa755a\",\n          iconColor: \"#fa755a\"\n        }\n      }\n    };\n    const formStyles = {\n      margin: '0 0 8% 0',\n      display: 'flex',\n      maxWidth: '100% !important'\n    };\n    const outerStyles = {\n      justifyContent: 'spaceBetween',\n      width: '13%'\n    };\n    const innerStyles = {\n      justifyContent: 'spaceBetween',\n      width: '74%'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: formStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: outerStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      style: innerStyles,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      placeholder: \"Name\",\n      autoComplete: \"cardholder\",\n      className: \"sr-input\",\n      onChange: e => setActualName(e.target.value),\n      value: actualName,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"lastName\",\n      name: \"lastName\",\n      placeholder: \"Last name\",\n      className: \"sr-input\",\n      onChange: e => setLastName(e.target.value),\n      value: lastName,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"address\",\n      name: \"Address\",\n      placeholder: \"Address\",\n      className: \"sr-input\",\n      onChange: e => setAddress(e.target.value),\n      value: address,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"city\",\n      name: \"City\",\n      placeholder: \"City\",\n      className: \"sr-input\",\n      onChange: e => setCity(e.target.value),\n      value: city,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"province\",\n      name: \"province\",\n      placeholder: \"State\",\n      className: \"sr-input\",\n      onChange: e => setProvince(e.target.value),\n      value: province,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, \"Postal Code\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"postal_code\",\n      name: \"postal_code\",\n      placeholder: \"Postal Code\",\n      className: \"sr-input\",\n      onChange: e => setPostalCode(e.target.value),\n      value: postal_code,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      className: \"sr-input\",\n      onChange: e => setEmail(e.target.value),\n      value: email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(CardElement, {\n      className: \"sr-input sr-card-element\",\n      options: options,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }), error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message sr-field-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }, error), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }, processing ? \"Processing…\" : \"Pay\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: outerStyles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sr-payment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sr-form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }), renderForm()));\n};\n\nexport default withRouter(CheckoutForm);","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/Checkout/CheckoutForm.js"],"names":["React","useContext","useEffect","useState","AuthContext","CardElement","useStripe","useElements","createPaymentIntent","createOrder","withRouter","Form","FormGroup","Label","Input","CheckoutForm","price","history","state","dispatch","clientSecret","setClientSecret","error","setError","metadata","setMetadata","processing","setProcessing","actualName","setActualName","lastName","setLastName","address","setAddress","city","setCity","province","setProvince","postal_code","setPostalCode","email","setEmail","stripe","elements","cartTotal","JSON","parse","sessionStorage","getItem","item","then","console","log","client_secret","catch","err","message","handleSubmit","ev","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","billing_details","name","target","value","paymentIntent","type","push","renderForm","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","formStyles","margin","display","maxWidth","outerStyles","justifyContent","width","innerStyles","e"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState } from \"react\";\nimport AuthContext from '../AuthContext'\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport {createPaymentIntent,createOrder} from '../actions'\nimport {withRouter} from 'react-router-dom'\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport './CheckoutForm.scss'\n\nconst CheckoutForm = ({price,history}) => {\n  const {state,dispatch} = useContext(AuthContext)\n\n  const [clientSecret, setClientSecret] = useState(null);\n  const [error, setError] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const [processing, setProcessing] = useState(false);\n  const [actualName,setActualName] = useState('')\n  const [lastName,setLastName] = useState('')\n  const [address,setAddress] = useState('')\n  const [city,setCity] = useState('')\n  const [province,setProvince] = useState('')\n  const [postal_code,setPostalCode] = useState('')\n  const [email,setEmail] = useState('')\n  const stripe = useStripe();\n  const elements = useElements();\n\n  let cartTotal = JSON.parse(sessionStorage.getItem('cart'))\n\n  useEffect(() => {\n    const item = {actualName,address,city,province,postal_code,email,price,cartTotal}\n      createPaymentIntent(item)\n      .then((clientSecret) => {\n          console.log(\"clientSecret:\")\n          console.log(clientSecret.client_secret)\n          setClientSecret(clientSecret.client_secret)\n        console.log(\"clientSecret:\")\n        console.log(clientSecret)\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  },[]);\n  \n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    setProcessing(true);\n    const item = {actualName,lastName,address,city,province,postal_code,email,price,cartTotal}\n    \n    createPaymentIntent(item)\n    .then((clientSecret) => {\n        setClientSecret(clientSecret.client_secret)\n    })\n    .catch((err) => {\n      setError(err.message);\n    });\n\n    // Step 3: Use clientSecret from PaymentIntent and the CardElement\n    // to confirm payment with stripe.confirmCardPayment()\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: ev.target.name.value,\n        },\n      },\n    });\n\n    console.log(\"payload:\")\n    console.log(payload)\n\n    if (payload.error || !payload) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n      console.log(\"[error]\", payload.error);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setMetadata(payload.paymentIntent);\n      console.log(\"[PaymentIntent]\", payload.paymentIntent)\n      dispatch({type:\"CREATE_ORDER\",payload:item})\n      createOrder(item,dispatch)\n      history.push('/receipt')\n    }\n  };\n\n  const renderForm = () => {\n    const options = {\n      style: {\n        base: {\n          color: \"#32325d\",\n          fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n          fontSmoothing: \"antialiased\",\n          fontSize: \"16px\",\n          \"::placeholder\": {\n            color: \"#aab7c4\",\n          },\n        },\n        invalid: {\n          color: \"#fa755a\",\n          iconColor: \"#fa755a\",\n        },\n      },\n    };\n\n    const formStyles = {\n      margin: '0 0 8% 0',\n      display:'flex',\n      maxWidth:'100% !important'\n    }\n\n    const outerStyles = {\n      justifyContent:'spaceBetween',\n      width:'13%'\n    }\n\n    const innerStyles = {\n      justifyContent:'spaceBetween',\n      width:'74%'\n    }\n\n    return (\n      <div style={formStyles}>\n        <div style={outerStyles}></div>\n      <Form style={innerStyles} onSubmit={handleSubmit}>\n\n      <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                <Label for=\"name\">Name</Label>\n                            <Input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            placeholder=\"Name\"\n                            autoComplete=\"cardholder\"\n                            className=\"sr-input\"\n                            onChange={e => setActualName(e.target.value)}\n                            value={actualName}\n                            required\n                            />\n                </FormGroup>\n                \n                    <FormGroup className=\"col-md-6\">\n                    <Label for=\"lastName\">Last Name</Label>\n                        <Input\n                        type=\"text\"\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        placeholder=\"Last name\"\n                        className=\"sr-input\"\n                        onChange={e => setLastName(e.target.value)}\n                        value={lastName}\n                        required\n                        />\n                    </FormGroup>\n              </div>\n          <div className=\"form-row\">\n                  <FormGroup className=\"col-md-6\">\n                  <Label for=\"address\">Address</Label>\n                              <Input\n                              type=\"text\"\n                              id=\"address\"\n                              name=\"Address\"\n                              placeholder=\"Address\"\n                              className=\"sr-input\"\n                              onChange={e => setAddress(e.target.value)}\n                              value={address}\n                              required\n                              />\n                  </FormGroup>\n\n                  <FormGroup className=\"col-md-6\">\n                  <Label for=\"address\">City</Label>\n                  <Input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"City\"\n                    placeholder=\"City\"\n                    className=\"sr-input\"\n                    onChange={e => setCity(e.target.value)}\n                    value={city}\n                    required\n                    />\n                  </FormGroup>\n            </div>\n            <div className=\"form-row\">\n                  <FormGroup className=\"col-md-6\">\n                  <Label for=\"address\">State</Label>\n                      <Input\n                      type=\"text\"\n                      id=\"province\"\n                      name=\"province\"\n                      placeholder=\"State\"\n                      className=\"sr-input\"\n                      onChange={e => setProvince(e.target.value)}\n                      value={province}\n                      required\n                      />\n                  </FormGroup>\n                \n                  <FormGroup className=\"col-md-6\">\n                  <Label for=\"address\">Postal Code</Label>\n                      <Input\n                      type=\"text\"\n                      id=\"postal_code\"\n                      name=\"postal_code\"\n                      placeholder=\"Postal Code\"\n                      className=\"sr-input\"\n                      onChange={e => setPostalCode(e.target.value)}\n                      value={postal_code}\n                      required\n                      />\n                  </FormGroup>\n                \n                  <FormGroup className=\"col-md-12\">\n                  <Label for=\"address\">Email</Label>\n                      <Input\n                      type=\"text\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      className=\"sr-input\"\n                      onChange={e => setEmail(e.target.value)}\n                      value={email}\n                      required\n                      />\n                  </FormGroup>\n          </div>\n\n            <CardElement\n              className=\"sr-input sr-card-element\"\n              options={options}\n              required\n              />\n\n        {error && <div className=\"message sr-field-error\">{error}</div>}\n\n        <button\n          className=\"btn\"\n          >\n            {processing ? \"Processing…\" : \"Pay\"}\n        </button>\n          \n      </Form>\n      <div style={outerStyles}></div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"checkout-form\">\n      <div className=\"sr-payment-form\">\n        <div className=\"sr-form-row\" />\n        {renderForm()}\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(CheckoutForm)"]},"metadata":{},"sourceType":"module"}