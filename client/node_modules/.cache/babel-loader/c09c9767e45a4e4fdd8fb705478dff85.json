{"ast":null,"code":"import axios from 'axios';\nexport const fetchAllMasks = async (dispatch, type) => {\n  console.log(\"fetch mask type:\");\n  console.log(type);\n  const res = await axios.post('/fetch-masks', {\n    type\n  });\n  dispatch({\n    type: \"FETCH_ALL_MASKS\",\n    payload: res.data\n  });\n};\nexport const filterMasks = async (value, dispatch) => {\n  console.log(\"filter meals:\");\n  console.log(value);\n  const res = await axios.post('/filter-masks', {\n    value\n  });\n  console.log(\"fetch order from alerts\");\n  console.log(res.data);\n  dispatch({\n    type: \"FETCH_ALL_MASKS\",\n    payload: res.data\n  });\n};\nexport const removeItemFromCartDB = async id => {\n  console.log(id);\n  const res = await axios.post('/remove-item-from-cart-db', {\n    id\n  });\n  console.log(res);\n};\nexport const changeLimitReached = async (id, dispatch) => {\n  console.log(id);\n  const fetchedMasks = await axios.get('/fetch-masks');\n  console.log(fetchedMasks);\n  dispatch({\n    type: \"FETCH_ALL_MASKS\",\n    payload: fetchedMasks.data\n  });\n};\nexport const removeItemFromInventory = async cartTotal => {\n  console.log(\"cartTotal\");\n  const items = {\n    cartTotal\n  };\n  console.log(items);\n  const res = await axios.post('/remove-item-from-inventory', cartTotal);\n};\nexport const getPublicStripeKey = options => {\n  return window.fetch(`/public-key`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    } else {\n      return null;\n    }\n  }).then(data => {\n    if (!data || data.error) {\n      console.log(\"API error:\", {\n        data\n      });\n      throw Error(\"API Error\");\n    } else {\n      return data.publicKey;\n    }\n  });\n};\nexport const createPaymentIntent = async item => {\n  const {\n    actualName,\n    lastName,\n    address,\n    city,\n    province,\n    postal_code,\n    price,\n    cartTotal\n  } = item; //   dispatch({type:\"CREATE_ORDER\",payload:item})\n\n  const options = {\n    actualName,\n    lastName,\n    cartTotal,\n    address,\n    city,\n    province,\n    postal_code,\n    price,\n    currency: \"USD\"\n  };\n  const res = await axios.post('/create-payment-intent', options);\n  return res.data;\n};\nexport const createOrder = async (item, dispatch) => {\n  console.log(\"item:\");\n  console.log(item);\n  const res = await axios.post('/create-order', item);\n  console.log(\"res.data\");\n  console.log(res.data);\n  dispatch({\n    type: \"CREATE_CONFIRMATION\",\n    payload: res.data\n  });\n};","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/actions.js"],"names":["axios","fetchAllMasks","dispatch","type","console","log","res","post","payload","data","filterMasks","value","removeItemFromCartDB","id","changeLimitReached","fetchedMasks","get","removeItemFromInventory","cartTotal","items","getPublicStripeKey","options","window","fetch","method","headers","then","status","json","error","Error","publicKey","createPaymentIntent","item","actualName","lastName","address","city","province","postal_code","price","currency","createOrder"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const fetchAllMasks = async (dispatch,type) =>{\n  console.log(\"fetch mask type:\")\n  console.log(type)\n    const res = await axios.post('/fetch-masks',{type});\n        dispatch({type:\"FETCH_ALL_MASKS\",payload:res.data})\n    }\n\nexport const filterMasks = async (value,dispatch) =>{\n        console.log(\"filter meals:\")\n        console.log(value)\n        \n        const res = await axios.post('/filter-masks',{value});\n            console.log(\"fetch order from alerts\")\n            console.log(res.data)\n            dispatch({type:\"FETCH_ALL_MASKS\",payload:res.data}) \n    }\n\nexport const removeItemFromCartDB = async id => {\n    console.log(id)\n        const res = await axios.post('/remove-item-from-cart-db',{id})\n        console.log(res);\n}\n\nexport const changeLimitReached = async (id,dispatch) => {\n    console.log(id)\n\n        const fetchedMasks = await axios.get('/fetch-masks');\n        console.log(fetchedMasks);\n        dispatch({type:\"FETCH_ALL_MASKS\",payload:fetchedMasks.data}) \n}\n\nexport const removeItemFromInventory = async (cartTotal) => {\n    console.log(\"cartTotal\")\n\n    const items = {cartTotal}\n    console.log(items)\n        const res = await axios.post('/remove-item-from-inventory',cartTotal)\n}\n\nexport const getPublicStripeKey = options => {\n    return window\n      .fetch(`/public-key`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n      .then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return null;\n        }\n      })\n      .then(data => {\n        if (!data || data.error) {\n          console.log(\"API error:\", { data });\n          throw Error(\"API Error\");\n        } else {\n          return data.publicKey;\n        }\n      });\n  };\n\n  export const createPaymentIntent = async item => {\n    const {actualName,lastName,address,city,province,postal_code,price,cartTotal} = item;\n    //   dispatch({type:\"CREATE_ORDER\",payload:item})\n    const options = {\n        actualName,\n        lastName,\n        cartTotal,\n        address,\n        city,\n        province,\n        postal_code,\n        price,\n        currency: \"USD\"\n      };\n    const res = await axios.post('/create-payment-intent',options)\n      return res.data;\n  };\n  \n  export const createOrder = async (item,dispatch) =>{\n    console.log(\"item:\")\n    console.log(item)\n    const res = await axios.post('/create-order', item);\n    console.log(\"res.data\")\n    console.log(res.data)\n    dispatch({type:\"CREATE_CONFIRMATION\",payload:res.data})     \n}"]},"metadata":{},"sourceType":"module"}