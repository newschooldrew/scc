{"ast":null,"code":"import _objectSpread from\"/Users/andrewperez/Documents/projects/scc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{addItemToCart,removeItemFromCart}from'./cart.utils';var Reducer=function Reducer(state,_ref){var type=_ref.type,payload=_ref.payload;switch(type){case\"FETCH_ALL_MASKS\":return _objectSpread(_objectSpread({},state),{},{allMasks:payload});case\"ADD_ITEM_TO_CART\":var sessionItems=JSON.parse(sessionStorage.getItem('cart'));console.log(\"sessionItems within reducer\");console.log(sessionItems);return _objectSpread(_objectSpread({},state),{},{cartItems:addItemToCart(sessionItems||[],payload)});case\"REMOVE_ITEM_FROM_CART\":var sessionItems_1=JSON.parse(sessionStorage.getItem('cart'));var cartTotal=JSON.parse(sessionStorage.getItem('cartTotal'));return _objectSpread(_objectSpread({},state),{},{cartItems:removeItemFromCart(sessionItems_1||[],payload,cartTotal)});case\"UPDATE_CART\":return _objectSpread(_objectSpread({},state),{},{cartItems:addItemToCart(payload,[])});case\"CLEAR_CART\":var sessionItems_2=JSON.parse(sessionStorage.getItem('cart'))||[];return _objectSpread(_objectSpread({},state),{},{cartItems:sessionItems_2.filter(function(cartItem){return cartItem.id!==payload.id;})});case\"TOGGLE_CART\":return _objectSpread(_objectSpread({},state),{},{toggleCart:!state.toggleCart});case\"EMPTY_CART\":return _objectSpread(_objectSpread({},state),{},{cartItems:[]});}};export default Reducer;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/scc/client/src/Reducer.js"],"names":["addItemToCart","removeItemFromCart","Reducer","state","type","payload","allMasks","sessionItems","JSON","parse","sessionStorage","getItem","console","log","cartItems","sessionItems_1","cartTotal","sessionItems_2","filter","cartItem","id","toggleCart"],"mappings":"sKAAA,OAAQA,aAAR,CAAsBC,kBAAtB,KAA+C,cAA/C,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,MAAyB,IAAjBC,CAAAA,IAAiB,MAAjBA,IAAiB,CAAZC,OAAY,MAAZA,OAAY,CACrC,OAAOD,IAAP,EACA,IAAK,iBAAL,CACI,sCACOD,KADP,MAEIG,QAAQ,CAACD,OAFb,GAKJ,IAAK,kBAAL,CACI,GAAIE,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAnB,CACAC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACAD,OAAO,CAACC,GAAR,CAAYN,YAAZ,EACQ,sCACGJ,KADH,MAEAW,SAAS,CAACd,aAAa,CAACO,YAAY,EAAI,EAAjB,CAAoBF,OAApB,CAFvB,GAIZ,IAAK,uBAAL,CACQ,GAAIU,CAAAA,cAAc,CAAGP,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAArB,CACA,GAAIK,CAAAA,SAAS,CAAGR,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,CAAhB,CACI,sCACOR,KADP,MAEIW,SAAS,CAACb,kBAAkB,CAACc,cAAc,EAAI,EAAnB,CAAsBV,OAAtB,CAA8BW,SAA9B,CAFhC,GAIZ,IAAK,aAAL,CACQ,sCACOb,KADP,MAEIW,SAAS,CAACd,aAAa,CAACK,OAAD,CAAS,EAAT,CAF3B,GAKR,IAAK,YAAL,CACI,GAAIY,CAAAA,cAAc,CAAGT,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,GAA8C,EAAnE,CACI,sCACOR,KADP,MAEIW,SAAS,CAACG,cAAc,CAACC,MAAf,CACN,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,EAAT,GAAef,OAAO,CAACe,EAA3B,EADF,CAFd,GAOR,IAAK,aAAL,CACQ,sCACOjB,KADP,MAEIkB,UAAU,CAAC,CAAClB,KAAK,CAACkB,UAFtB,GAIR,IAAK,YAAL,CACI,sCACWlB,KADX,MAEQW,SAAS,CAAC,EAFlB,GA3CJ,CAgDH,CAjDD,CAkDA,cAAeZ,CAAAA,OAAf","sourcesContent":["import {addItemToCart,removeItemFromCart} from './cart.utils'\n\nconst Reducer = (state,{type,payload}) =>{\n    switch(type){\n    case \"FETCH_ALL_MASKS\":\n        return{\n            ...state,\n            allMasks:payload\n        }\n\n    case \"ADD_ITEM_TO_CART\":\n        let sessionItems = JSON.parse(sessionStorage.getItem('cart'))\n        console.log(\"sessionItems within reducer\")\n        console.log(sessionItems)\n                return{\n                ...state,\n                cartItems:addItemToCart(sessionItems || [],payload)\n                }\n    case \"REMOVE_ITEM_FROM_CART\":\n            let sessionItems_1 = JSON.parse(sessionStorage.getItem('cart'))\n            let cartTotal = JSON.parse(sessionStorage.getItem('cartTotal'))\n                return{\n                    ...state,\n                    cartItems:removeItemFromCart(sessionItems_1 || [],payload,cartTotal)\n                    }          \n    case \"UPDATE_CART\":\n            return{\n                ...state,\n                cartItems:addItemToCart(payload,[])\n            }\n    \n    case \"CLEAR_CART\":\n        let sessionItems_2 = JSON.parse(sessionStorage.getItem('cart')) || []\n            return{\n                ...state,\n                cartItems:sessionItems_2.filter(\n                    cartItem => cartItem.id !==payload.id\n                    )\n                }\n    \n    case \"TOGGLE_CART\":\n            return{\n                ...state,\n                toggleCart:!state.toggleCart\n                    }   \n    case \"EMPTY_CART\":\n        return{\n                ...state,\n                cartItems:[]\n            }   \n    }\n}\nexport default Reducer;"]},"metadata":{},"sourceType":"module"}